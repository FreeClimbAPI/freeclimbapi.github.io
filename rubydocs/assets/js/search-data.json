{
  
  "0": {
    "title": "",
    "content": "404 . Page not found :( . The requested page could not be found. .",
    "url": "http://localhost:4000/rubydocs/404.html",
    "relUrl": "/404.html"
  }
  ,"1": {
    "title": "Freeclimb::AccountRequest",
    "content": "Freeclimb::AccountRequest . Properties . Name Type Description Notes . _alias | String | Description for this account. | [optional] | . label | String | Group to which this account belongs. | [optional] | . request_id | String | RequestId for this request starting with prefix RQ followed by 40 hexadecimal characters. FreeClimb logs generated while processing this request will include this requestId. If it is not provided, FreeClimb will generate a requestId and return it as a header in the response, e.g. X-Pulse-Request-Id: &lt;requestId&gt; | [optional] | . Code Sample . require &#39;Freeclimb&#39; instance = Freeclimb::AccountRequest.new(_alias: null, label: null, request_id: null) .",
    "url": "http://localhost:4000/rubydocs/docs/AccountRequest.html",
    "relUrl": "/docs/AccountRequest.html"
  }
  ,"2": {
    "title": "Freeclimb::AccountResult",
    "content": "Freeclimb::AccountResult . Properties . Name Type Description Notes . uri | String | The URI for this resource, relative to /apiserver. | [optional] | . date_created | String | The date that this resource was created (GMT) in RFC 1123 format (e.g., Mon, 15 Jun 2009 20:45:30 GMT). | [optional] | . date_updated | String | The date that this resource was last updated (GMT) in RFC 1123 format (e.g., Mon, 15 Jun 2009 20:45:30 GMT). | [optional] | . revision | Integer | Revision count for the resource. This count is set to 1 on creation and is incremented every time it is updated. | [optional] | . account_id | String | String that uniquely identifies this account resource. | [optional] | . auth_token | String | The authorization token assigned to this account. This token must be kept a secret by the customer. | [optional] | . _alias | String | A description for this account. | [optional] | . label | String | A string that identifies a category or group to which the account belongs. | [optional] | . type | String | The type of this account. It is one of: trial or full. | [optional] | . status | String | The status of this account. It is one of: active, suspended, or closed. | [optional] | . subresource_uris | Object | The list of subresources for this account. | [optional] | . Code Sample . require &#39;Freeclimb&#39; instance = Freeclimb::AccountResult.new(uri: null, date_created: null, date_updated: null, revision: null, account_id: null, auth_token: null, _alias: null, label: null, type: null, status: null, subresource_uris: null) .",
    "url": "http://localhost:4000/rubydocs/docs/AccountResult.html",
    "relUrl": "/docs/AccountResult.html"
  }
  ,"3": {
    "title": "Freeclimb::AccountResultAllOf",
    "content": "Freeclimb::AccountResultAllOf . Properties . Name Type Description Notes . account_id | String | String that uniquely identifies this account resource. | [optional] | . auth_token | String | The authorization token assigned to this account. This token must be kept a secret by the customer. | [optional] | . _alias | String | A description for this account. | [optional] | . label | String | A string that identifies a category or group to which the account belongs. | [optional] | . type | String | The type of this account. It is one of: trial or full. | [optional] | . status | String | The status of this account. It is one of: active, suspended, or closed. | [optional] | . subresource_uris | Object | The list of subresources for this account. | [optional] | . Code Sample . require &#39;Freeclimb&#39; instance = Freeclimb::AccountResultAllOf.new(account_id: null, auth_token: null, _alias: null, label: null, type: null, status: null, subresource_uris: null) .",
    "url": "http://localhost:4000/rubydocs/docs/AccountResultAllOf.html",
    "relUrl": "/docs/AccountResultAllOf.html"
  }
  ,"4": {
    "title": "Freeclimb::ApplicationList",
    "content": "Freeclimb::ApplicationList . Properties . Name Type Description Notes . total | Integer | Total amount of requested resource. | [optional] | . start | Integer | Resource index at start of current page | [optional] | . _end | Integer | Resource index at end of current page | [optional] | . page | Integer | Current page | [optional] | . num_pages | Integer | Total number of pages | [optional] | . page_size | Integer | Number of items per page | [optional] | . next_page_uri | String | Uri to retrieve the next page of items | [optional] | . applications | Array&lt;ApplicationResult&gt; |   | [optional] | . Code Sample . require &#39;Freeclimb&#39; instance = Freeclimb::ApplicationList.new(total: null, start: null, _end: null, page: null, num_pages: null, page_size: null, next_page_uri: null, applications: null) .",
    "url": "http://localhost:4000/rubydocs/docs/ApplicationList.html",
    "relUrl": "/docs/ApplicationList.html"
  }
  ,"5": {
    "title": "Freeclimb::ApplicationListAllOf",
    "content": "Freeclimb::ApplicationListAllOf . Properties . Name Type Description Notes . applications | Array&lt;ApplicationResult&gt; |   | [optional] | . Code Sample . require &#39;Freeclimb&#39; instance = Freeclimb::ApplicationListAllOf.new(applications: null) .",
    "url": "http://localhost:4000/rubydocs/docs/ApplicationListAllOf.html",
    "relUrl": "/docs/ApplicationListAllOf.html"
  }
  ,"6": {
    "title": "Freeclimb::ApplicationRequest",
    "content": "Freeclimb::ApplicationRequest . Properties . Name Type Description Notes . _alias | String | A human readable description of the application, with maximum length 64 characters. | [optional] | . voice_url | String | The URL that FreeClimb will request when an inbound call arrives on a phone number assigned to this application. Used only for inbound calls. | [optional] | . voice_fallback_url | String | The URL that FreeClimb will request if it times out waiting for a response from the voiceUrl. Used for inbound calls only. Note: A PerCL response is expected to control the inbound call. | [optional] | . call_connect_url | String | The URL that FreeClimb will request when an outbound call request is complete. Used for outbound calls only. Note: A PerCL response is expected if the outbound call is connected (status=InProgress) to control the call. | [optional] | . status_callback_url | String | The URL that FreeClimb will request to pass call status (such as call ended) to the application. Note: This is a notification only; any PerCL returned will be ignored. | [optional] | . sms_url | String | The URL that FreeClimb will request when a phone number assigned to this application receives an incoming SMS message. Used for inbound SMS only. Note: Any PerCL returned will be ignored. | [optional] | . sms_fallback_url | String | The URL that FreeClimb will request if it times out waiting for a response from the smsUrl. Used for inbound SMS only. Note: Any PerCL returned will be ignored. | [optional] | . request_id | String | The requestId for this request starting with prefix &quot;RQ &quot; followed by 40 hexadecimal characters. FreeClimb logs generated while processing this request will include this requestId. If it is not provided, FreeClimb will generate a requestId and return it as a header in the response, e.g. X-Pulse-Request-Id: &lt;requestId&gt; | [optional] | . Code Sample . require &#39;Freeclimb&#39; instance = Freeclimb::ApplicationRequest.new(_alias: null, voice_url: null, voice_fallback_url: null, call_connect_url: null, status_callback_url: null, sms_url: null, sms_fallback_url: null, request_id: null) .",
    "url": "http://localhost:4000/rubydocs/docs/ApplicationRequest.html",
    "relUrl": "/docs/ApplicationRequest.html"
  }
  ,"7": {
    "title": "Freeclimb::ApplicationResult",
    "content": "Freeclimb::ApplicationResult . Properties . Name Type Description Notes . uri | String | The URI for this resource, relative to /apiserver. | [optional] | . date_created | String | The date that this resource was created (GMT) in RFC 1123 format (e.g., Mon, 15 Jun 2009 20:45:30 GMT). | [optional] | . date_updated | String | The date that this resource was last updated (GMT) in RFC 1123 format (e.g., Mon, 15 Jun 2009 20:45:30 GMT). | [optional] | . revision | Integer | Revision count for the resource. This count is set to 1 on creation and is incremented every time it is updated. | [optional] | . account_id | String | ID of the account that owns this phone number. | [optional] | . application_id | String | ID of the Application that FreeClimb should contact if a Call or SMS arrives for this phone number or a Call from this number is placed. An incoming phone number is not useful until associated with an applicationId. | [optional] | . _alias | String | Description for this phone number. Typically the conventionally-formatted version of the phone number. | [optional] | . voice_url | String | The URL FreeClimb will request when a phone number assigned to this Application receives a Call. Used for inbound calls only. | [optional] | . voice_fallback_url | String | The URL that FreeClimb will request if it times out waiting for a response from the voiceUrl. Used for inbound calls only. | [optional] | . call_connect_url | String | The URL to which FreeClimb will make a POST request informing the result of the outbound Call request. The status property of the request message specifies if the Call was connected or not. | [optional] | . status_callback_url | String | A URL to which FreeClimb will make a POST request when the Call ends to notify this app. | [optional] | . sms_url | String | The URL FreeClimb will request when a phone number assigned to this Application receives an incoming SMS message. Used for inbound SMS only. | [optional] | . sms_fallback_url | String | The URL that FreeClimb will request if it times out waiting for a response from the smsUrl. Used for inbound SMS only. | [optional] | . Code Sample . require &#39;Freeclimb&#39; instance = Freeclimb::ApplicationResult.new(uri: null, date_created: null, date_updated: null, revision: null, account_id: null, application_id: null, _alias: null, voice_url: null, voice_fallback_url: null, call_connect_url: null, status_callback_url: null, sms_url: null, sms_fallback_url: null) .",
    "url": "http://localhost:4000/rubydocs/docs/ApplicationResult.html",
    "relUrl": "/docs/ApplicationResult.html"
  }
  ,"8": {
    "title": "Freeclimb::ApplicationResultAllOf",
    "content": "Freeclimb::ApplicationResultAllOf . Properties . Name Type Description Notes . account_id | String | ID of the account that owns this phone number. | [optional] | . application_id | String | ID of the Application that FreeClimb should contact if a Call or SMS arrives for this phone number or a Call from this number is placed. An incoming phone number is not useful until associated with an applicationId. | [optional] | . _alias | String | Description for this phone number. Typically the conventionally-formatted version of the phone number. | [optional] | . voice_url | String | The URL FreeClimb will request when a phone number assigned to this Application receives a Call. Used for inbound calls only. | [optional] | . voice_fallback_url | String | The URL that FreeClimb will request if it times out waiting for a response from the voiceUrl. Used for inbound calls only. | [optional] | . call_connect_url | String | The URL to which FreeClimb will make a POST request informing the result of the outbound Call request. The status property of the request message specifies if the Call was connected or not. | [optional] | . status_callback_url | String | A URL to which FreeClimb will make a POST request when the Call ends to notify this app. | [optional] | . sms_url | String | The URL FreeClimb will request when a phone number assigned to this Application receives an incoming SMS message. Used for inbound SMS only. | [optional] | . sms_fallback_url | String | The URL that FreeClimb will request if it times out waiting for a response from the smsUrl. Used for inbound SMS only. | [optional] | . Code Sample . require &#39;Freeclimb&#39; instance = Freeclimb::ApplicationResultAllOf.new(account_id: null, application_id: null, _alias: null, voice_url: null, voice_fallback_url: null, call_connect_url: null, status_callback_url: null, sms_url: null, sms_fallback_url: null) .",
    "url": "http://localhost:4000/rubydocs/docs/ApplicationResultAllOf.html",
    "relUrl": "/docs/ApplicationResultAllOf.html"
  }
  ,"9": {
    "title": "Freeclimb::AvailableNumber",
    "content": "Freeclimb::AvailableNumber . Properties . Name Type Description Notes . phone_number | String | The phone number, in E.164 format (+ country code and phone number: +18003608245). | [optional] | . voice_enabled | Boolean | Typically set to true for all numbers. | [optional] | . sms_enabled | Boolean | Indicates whether the phone number can send and receive SMS messages. | [optional] | . _alias | String | A nicely-formatted version of the phone number. | [optional] | . region | String | The state or province of this phone number. | [optional] | . country | String | The country of this phone number. | [optional] | . Code Sample . require &#39;Freeclimb&#39; instance = Freeclimb::AvailableNumber.new(phone_number: null, voice_enabled: null, sms_enabled: null, _alias: null, region: null, country: null) .",
    "url": "http://localhost:4000/rubydocs/docs/AvailableNumber.html",
    "relUrl": "/docs/AvailableNumber.html"
  }
  ,"10": {
    "title": "Freeclimb::AvailableNumberList",
    "content": "Freeclimb::AvailableNumberList . Properties . Name Type Description Notes . total | Integer | Total amount of requested resource. | [optional] | . start | Integer | Resource index at start of current page | [optional] | . _end | Integer | Resource index at end of current page | [optional] | . page | Integer | Current page | [optional] | . num_pages | Integer | Total number of pages | [optional] | . page_size | Integer | Number of items per page | [optional] | . next_page_uri | String | Uri to retrieve the next page of items | [optional] | . available_phone_numbers | Array&lt;AvailableNumber&gt; |   | [optional] | . Code Sample . require &#39;Freeclimb&#39; instance = Freeclimb::AvailableNumberList.new(total: null, start: null, _end: null, page: null, num_pages: null, page_size: null, next_page_uri: null, available_phone_numbers: null) .",
    "url": "http://localhost:4000/rubydocs/docs/AvailableNumberList.html",
    "relUrl": "/docs/AvailableNumberList.html"
  }
  ,"11": {
    "title": "Freeclimb::AvailableNumberListAllOf",
    "content": "Freeclimb::AvailableNumberListAllOf . Properties . Name Type Description Notes . available_phone_numbers | Array&lt;AvailableNumber&gt; |   | [optional] | . Code Sample . require &#39;Freeclimb&#39; instance = Freeclimb::AvailableNumberListAllOf.new(available_phone_numbers: null) .",
    "url": "http://localhost:4000/rubydocs/docs/AvailableNumberListAllOf.html",
    "relUrl": "/docs/AvailableNumberListAllOf.html"
  }
  ,"12": {
    "title": "Freeclimb::BuyIncomingNumberRequest",
    "content": "Freeclimb::BuyIncomingNumberRequest . Properties . Name Type Description Notes . phone_number | String | Phone number to purchase in E.164 format (as returned in the list of Available Phone Numbers). |   | . _alias | String | Description for this new incoming phone number (max 64 characters). | [optional] | . application_id | String | ID of the application that should handle phone calls to the number. | [optional] | . request_id | String | RequestId for this request starting with prefix `RQ` followed by 40 hexadecimal characters. FreeClimb logs generated while processing this request will include this requestId. If it is not provided, FreeClimb will generate a requestId and return it as a header in the response, (e.g., `X-Pulse-Request-Id: &lt;requestId&gt;`). | [optional] | . Code Sample . require &#39;Freeclimb&#39; instance = Freeclimb::BuyIncomingNumberRequest.new(phone_number: null, _alias: null, application_id: null, request_id: null) .",
    "url": "http://localhost:4000/rubydocs/docs/BuyIncomingNumberRequest.html",
    "relUrl": "/docs/BuyIncomingNumberRequest.html"
  }
  ,"13": {
    "title": "Freeclimb::CallList",
    "content": "Freeclimb::CallList . Properties . Name Type Description Notes . total | Integer | Total amount of requested resource. | [optional] | . start | Integer | Resource index at start of current page | [optional] | . _end | Integer | Resource index at end of current page | [optional] | . page | Integer | Current page | [optional] | . num_pages | Integer | Total number of pages | [optional] | . page_size | Integer | Number of items per page | [optional] | . next_page_uri | String | Uri to retrieve the next page of items | [optional] | . calls | Array&lt;CallResult&gt; |   | [optional] | . Code Sample . require &#39;Freeclimb&#39; instance = Freeclimb::CallList.new(total: null, start: null, _end: null, page: null, num_pages: null, page_size: null, next_page_uri: null, calls: null) .",
    "url": "http://localhost:4000/rubydocs/docs/CallList.html",
    "relUrl": "/docs/CallList.html"
  }
  ,"14": {
    "title": "Freeclimb::CallListAllOf",
    "content": "Freeclimb::CallListAllOf . Properties . Name Type Description Notes . calls | Array&lt;CallResult&gt; |   | [optional] | . Code Sample . require &#39;Freeclimb&#39; instance = Freeclimb::CallListAllOf.new(calls: null) .",
    "url": "http://localhost:4000/rubydocs/docs/CallListAllOf.html",
    "relUrl": "/docs/CallListAllOf.html"
  }
  ,"15": {
    "title": "Freeclimb::CallResult",
    "content": "Freeclimb::CallResult . Properties . Name Type Description Notes . uri | String | The URI for this resource, relative to /apiserver. | [optional] | . date_created | String | The date that this resource was created (GMT) in RFC 1123 format (e.g., Mon, 15 Jun 2009 20:45:30 GMT). | [optional] | . date_updated | String | The date that this resource was last updated (GMT) in RFC 1123 format (e.g., Mon, 15 Jun 2009 20:45:30 GMT). | [optional] | . revision | Integer | Revision count for the resource. This count is set to 1 on creation and is incremented every time it is updated. | [optional] | . call_id | String | String that uniquely identifies this Call resource. | [optional] | . parent_call_id | String | ID of the Call that created this leg (child Call). | [optional] | . account_id | String | ID of the account that owns this Call. | [optional] | . from | String | Phone number that initiated this Call. | [optional] | . to | String | Phone number that received this Call. | [optional] | . phone_number_id | String | If the Call was inbound, this is the ID of the IncomingPhoneNumber that received the Call (DNIS). If the Call was outbound, this is the ID of the phone number from which the Call was placed (ANI). | [optional] | . status | String | * `queued` &amp;ndash; Call is ready and waiting in line before going out. * `ringing` &amp;ndash; Call is currently ringing. * `inProgress` &amp;ndash; Call was answered and is currently in progress. * `canceled` &amp;ndash; Call was hung up while it was queued or ringing. * `completed` &amp;ndash; Call was answered and has ended normally. * `busy` &amp;ndash; Caller received a busy signal. * `failed` &amp;ndash; Call could not be completed as dialed, most likely because the phone number was non-existent. * `noAnswer` &amp;ndash; Call ended without being answered. | [optional] | . start_time | String | Start time of the Call (GMT) in RFC 1123 format (e.g., Mon, 15 Jun 2009 20:45:30 GMT). Empty if the Call has not yet been dialed. | [optional] | . connect_time | String | Time the Call was answered (GMT) in RFC 1123 format (e.g., Mon, 15 Jun 2009 20:45:30 GMT). Empty if the Call has not yet been dialed. | [optional] | . end_time | String | End time of the Call (GMT) in RFC 1123 format (e.g., Mon, 15 Jun 2009 20:45:30 GMT). Empty if the Call did not complete successfully. | [optional] | . duration | Integer | Total length of the Call in seconds. Measures time between startTime and endTime. This value is empty for busy, failed, unanswered or ongoing Calls. | [optional] | . connect_duration | Integer | Length of time that the Call was connected in seconds. Measures time between connectTime and endTime. This value is empty for busy, failed, unanswered or ongoing Calls. | [optional] | . direction | String | Direction of the Call. `inbound` for Calls into FreeClimb, `outboundAPI` for Calls initiated via the REST API, `outboundDial` for Calls initiated by the `OutDial` PerCL command. | [optional] | . answered_by | String | If this Call was initiated with answering machine detection, either `human` or `machine`. Empty otherwise. | [optional] | . subresource_uris | Object | The list of subresources for this Call. These include things like logs and recordings associated with the Call. | [optional] | . Code Sample . require &#39;Freeclimb&#39; instance = Freeclimb::CallResult.new(uri: null, date_created: null, date_updated: null, revision: null, call_id: null, parent_call_id: null, account_id: null, from: null, to: null, phone_number_id: null, status: null, start_time: null, connect_time: null, end_time: null, duration: null, connect_duration: null, direction: null, answered_by: null, subresource_uris: null) .",
    "url": "http://localhost:4000/rubydocs/docs/CallResult.html",
    "relUrl": "/docs/CallResult.html"
  }
  ,"16": {
    "title": "Freeclimb::CallResultAllOf",
    "content": "Freeclimb::CallResultAllOf . Properties . Name Type Description Notes . call_id | String | String that uniquely identifies this Call resource. | [optional] | . parent_call_id | String | ID of the Call that created this leg (child Call). | [optional] | . account_id | String | ID of the account that owns this Call. | [optional] | . from | String | Phone number that initiated this Call. | [optional] | . to | String | Phone number that received this Call. | [optional] | . phone_number_id | String | If the Call was inbound, this is the ID of the IncomingPhoneNumber that received the Call (DNIS). If the Call was outbound, this is the ID of the phone number from which the Call was placed (ANI). | [optional] | . status | String | * `queued` &amp;ndash; Call is ready and waiting in line before going out. * `ringing` &amp;ndash; Call is currently ringing. * `inProgress` &amp;ndash; Call was answered and is currently in progress. * `canceled` &amp;ndash; Call was hung up while it was queued or ringing. * `completed` &amp;ndash; Call was answered and has ended normally. * `busy` &amp;ndash; Caller received a busy signal. * `failed` &amp;ndash; Call could not be completed as dialed, most likely because the phone number was non-existent. * `noAnswer` &amp;ndash; Call ended without being answered. | [optional] | . start_time | String | Start time of the Call (GMT) in RFC 1123 format (e.g., Mon, 15 Jun 2009 20:45:30 GMT). Empty if the Call has not yet been dialed. | [optional] | . connect_time | String | Time the Call was answered (GMT) in RFC 1123 format (e.g., Mon, 15 Jun 2009 20:45:30 GMT). Empty if the Call has not yet been dialed. | [optional] | . end_time | String | End time of the Call (GMT) in RFC 1123 format (e.g., Mon, 15 Jun 2009 20:45:30 GMT). Empty if the Call did not complete successfully. | [optional] | . duration | Integer | Total length of the Call in seconds. Measures time between startTime and endTime. This value is empty for busy, failed, unanswered or ongoing Calls. | [optional] | . connect_duration | Integer | Length of time that the Call was connected in seconds. Measures time between connectTime and endTime. This value is empty for busy, failed, unanswered or ongoing Calls. | [optional] | . direction | String | Direction of the Call. `inbound` for Calls into FreeClimb, `outboundAPI` for Calls initiated via the REST API, `outboundDial` for Calls initiated by the `OutDial` PerCL command. | [optional] | . answered_by | String | If this Call was initiated with answering machine detection, either `human` or `machine`. Empty otherwise. | [optional] | . subresource_uris | Object | The list of subresources for this Call. These include things like logs and recordings associated with the Call. | [optional] | . Code Sample . require &#39;Freeclimb&#39; instance = Freeclimb::CallResultAllOf.new(call_id: null, parent_call_id: null, account_id: null, from: null, to: null, phone_number_id: null, status: null, start_time: null, connect_time: null, end_time: null, duration: null, connect_duration: null, direction: null, answered_by: null, subresource_uris: null) .",
    "url": "http://localhost:4000/rubydocs/docs/CallResultAllOf.html",
    "relUrl": "/docs/CallResultAllOf.html"
  }
  ,"17": {
    "title": "Freeclimb::ConferenceList",
    "content": "Freeclimb::ConferenceList . Properties . Name Type Description Notes . total | Integer | Total amount of requested resource. | [optional] | . start | Integer | Resource index at start of current page | [optional] | . _end | Integer | Resource index at end of current page | [optional] | . page | Integer | Current page | [optional] | . num_pages | Integer | Total number of pages | [optional] | . page_size | Integer | Number of items per page | [optional] | . next_page_uri | String | Uri to retrieve the next page of items | [optional] | . conferences | Array&lt;ConferenceResult&gt; |   | [optional] | . Code Sample . require &#39;Freeclimb&#39; instance = Freeclimb::ConferenceList.new(total: null, start: null, _end: null, page: null, num_pages: null, page_size: null, next_page_uri: null, conferences: null) .",
    "url": "http://localhost:4000/rubydocs/docs/ConferenceList.html",
    "relUrl": "/docs/ConferenceList.html"
  }
  ,"18": {
    "title": "Freeclimb::ConferenceListAllOf",
    "content": "Freeclimb::ConferenceListAllOf . Properties . Name Type Description Notes . conferences | Array&lt;ConferenceResult&gt; |   | [optional] | . Code Sample . require &#39;Freeclimb&#39; instance = Freeclimb::ConferenceListAllOf.new(conferences: null) .",
    "url": "http://localhost:4000/rubydocs/docs/ConferenceListAllOf.html",
    "relUrl": "/docs/ConferenceListAllOf.html"
  }
  ,"19": {
    "title": "Freeclimb::ConferenceParticipantList",
    "content": "Freeclimb::ConferenceParticipantList . Properties . Name Type Description Notes . total | Integer | Total amount of requested resource. | [optional] | . start | Integer | Resource index at start of current page | [optional] | . _end | Integer | Resource index at end of current page | [optional] | . page | Integer | Current page | [optional] | . num_pages | Integer | Total number of pages | [optional] | . page_size | Integer | Number of items per page | [optional] | . next_page_uri | String | Uri to retrieve the next page of items | [optional] | . participants | Array&lt;ConferenceParticipantResult&gt; |   | [optional] | . Code Sample . require &#39;Freeclimb&#39; instance = Freeclimb::ConferenceParticipantList.new(total: null, start: null, _end: null, page: null, num_pages: null, page_size: null, next_page_uri: null, participants: null) .",
    "url": "http://localhost:4000/rubydocs/docs/ConferenceParticipantList.html",
    "relUrl": "/docs/ConferenceParticipantList.html"
  }
  ,"20": {
    "title": "Freeclimb::ConferenceParticipantListAllOf",
    "content": "Freeclimb::ConferenceParticipantListAllOf . Properties . Name Type Description Notes . participants | Array&lt;ConferenceParticipantResult&gt; |   | [optional] | . Code Sample . require &#39;Freeclimb&#39; instance = Freeclimb::ConferenceParticipantListAllOf.new(participants: null) .",
    "url": "http://localhost:4000/rubydocs/docs/ConferenceParticipantListAllOf.html",
    "relUrl": "/docs/ConferenceParticipantListAllOf.html"
  }
  ,"21": {
    "title": "Freeclimb::ConferenceParticipantResult",
    "content": "Freeclimb::ConferenceParticipantResult . Properties . Name Type Description Notes . uri | String | The URI for this resource, relative to /apiserver. | [optional] | . date_created | String | The date that this resource was created (GMT) in RFC 1123 format (e.g., Mon, 15 Jun 2009 20:45:30 GMT). | [optional] | . date_updated | String | The date that this resource was last updated (GMT) in RFC 1123 format (e.g., Mon, 15 Jun 2009 20:45:30 GMT). | [optional] | . revision | Integer | Revision count for the resource. This count is set to 1 on creation and is incremented every time it is updated. | [optional] | . account_id | String | ID of the account that created this participant. | [optional] | . conference_id | String | ID of the conference this participant is in. | [optional] | . call_id | String | ID of the Call associated with this Participant. | [optional] | . talk | Boolean | True if this Participant has talk privileges in the Conference. False otherwise. | [optional] | . listen | Boolean | True if this Participant has listen privileges in the Conference. False otherwise. | [optional] | . start_conf_on_enter | Boolean | True if this Participant joining the Conference caused the Conference to start (status = inProgress). False otherwise. | [optional] | . Code Sample . require &#39;Freeclimb&#39; instance = Freeclimb::ConferenceParticipantResult.new(uri: null, date_created: null, date_updated: null, revision: null, account_id: null, conference_id: null, call_id: null, talk: null, listen: null, start_conf_on_enter: null) .",
    "url": "http://localhost:4000/rubydocs/docs/ConferenceParticipantResult.html",
    "relUrl": "/docs/ConferenceParticipantResult.html"
  }
  ,"22": {
    "title": "Freeclimb::ConferenceParticipantResultAllOf",
    "content": "Freeclimb::ConferenceParticipantResultAllOf . Properties . Name Type Description Notes . account_id | String | ID of the account that created this participant. | [optional] | . conference_id | String | ID of the conference this participant is in. | [optional] | . call_id | String | ID of the Call associated with this Participant. | [optional] | . talk | Boolean | True if this Participant has talk privileges in the Conference. False otherwise. | [optional] | . listen | Boolean | True if this Participant has listen privileges in the Conference. False otherwise. | [optional] | . start_conf_on_enter | Boolean | True if this Participant joining the Conference caused the Conference to start (status = inProgress). False otherwise. | [optional] | . Code Sample . require &#39;Freeclimb&#39; instance = Freeclimb::ConferenceParticipantResultAllOf.new(account_id: null, conference_id: null, call_id: null, talk: null, listen: null, start_conf_on_enter: null) .",
    "url": "http://localhost:4000/rubydocs/docs/ConferenceParticipantResultAllOf.html",
    "relUrl": "/docs/ConferenceParticipantResultAllOf.html"
  }
  ,"23": {
    "title": "Freeclimb::ConferenceResult",
    "content": "Freeclimb::ConferenceResult . Properties . Name Type Description Notes . uri | String | The URI for this resource, relative to /apiserver. | [optional] | . date_created | String | The date that this resource was created (GMT) in RFC 1123 format (e.g., Mon, 15 Jun 2009 20:45:30 GMT). | [optional] | . date_updated | String | The date that this resource was last updated (GMT) in RFC 1123 format (e.g., Mon, 15 Jun 2009 20:45:30 GMT). | [optional] | . revision | Integer | Revision count for the resource. This count is set to 1 on creation and is incremented every time it is updated. | [optional] | . conference_id | String | A string that uniquely identifies this Conference resource. | [optional] | . account_id | String | ID of the account that created this Conference. | [optional] | . _alias | String | A description for this Conference. | [optional] | . play_beep | String | Setting that controls when a beep is played. One of: always, never, entryOnly, exitOnly. Defaults to always. | [optional] | . record | Boolean | Flag indicating whether recording is enabled for this Conference. | [optional] | . status | String | The status of the Conference. One of: creating, empty, populated, inProgress, or terminated. | [optional] | . wait_url | String | URL referencing the audio file to be used as default wait music for the Conference when it is in the populated state. | [optional] | . action_url | String | URL invoked once the Conference is successfully created. | [optional] | . status_callback_url | String | URL to inform that the Conference status has changed. | [optional] | . subresource_uris | Object | The list of subresources for this Conference. This includes participants and/or recordings. | [optional] | . Code Sample . require &#39;Freeclimb&#39; instance = Freeclimb::ConferenceResult.new(uri: null, date_created: null, date_updated: null, revision: null, conference_id: null, account_id: null, _alias: null, play_beep: null, record: null, status: null, wait_url: null, action_url: null, status_callback_url: null, subresource_uris: null) .",
    "url": "http://localhost:4000/rubydocs/docs/ConferenceResult.html",
    "relUrl": "/docs/ConferenceResult.html"
  }
  ,"24": {
    "title": "Freeclimb::ConferenceResultAllOf",
    "content": "Freeclimb::ConferenceResultAllOf . Properties . Name Type Description Notes . conference_id | String | A string that uniquely identifies this Conference resource. | [optional] | . account_id | String | ID of the account that created this Conference. | [optional] | . _alias | String | A description for this Conference. | [optional] | . play_beep | String | Setting that controls when a beep is played. One of: always, never, entryOnly, exitOnly. Defaults to always. | [optional] | . record | Boolean | Flag indicating whether recording is enabled for this Conference. | [optional] | . status | String | The status of the Conference. One of: creating, empty, populated, inProgress, or terminated. | [optional] | . wait_url | String | URL referencing the audio file to be used as default wait music for the Conference when it is in the populated state. | [optional] | . action_url | String | URL invoked once the Conference is successfully created. | [optional] | . status_callback_url | String | URL to inform that the Conference status has changed. | [optional] | . subresource_uris | Object | The list of subresources for this Conference. This includes participants and/or recordings. | [optional] | . Code Sample . require &#39;Freeclimb&#39; instance = Freeclimb::ConferenceResultAllOf.new(conference_id: null, account_id: null, _alias: null, play_beep: null, record: null, status: null, wait_url: null, action_url: null, status_callback_url: null, subresource_uris: null) .",
    "url": "http://localhost:4000/rubydocs/docs/ConferenceResultAllOf.html",
    "relUrl": "/docs/ConferenceResultAllOf.html"
  }
  ,"25": {
    "title": "Freeclimb::CreateConferenceRequest",
    "content": "Freeclimb::CreateConferenceRequest . Properties . Name Type Description Notes . _alias | String | A description for this Conference. Maximum 64 characters. | [optional] | . play_beep | String | Controls when a beep is played. Valid values: `always`, `never`, `entryOnly`, `exitOnly`. | [optional] [default to &#39;always&#39;] | . record | Boolean | Setting to `true` records the entire Conference. | [optional] | . wait_url | String | If specified, a URL for the audio file that provides custom hold music for the Conference when it is in the populated state. Otherwise, FreeClimb uses a system default audio file. This is always fetched using HTTP GET and is fetched just once &amp;mdash; when the Conference is created. | [optional] | . status_callback_url | String | This URL is invoked when the status of the Conference changes. For more information, see statusCallbackUrl (below). | [optional] | . request_id | String | The requestId for this request starting with prefix &quot;RQ &quot; followed by 40 hexadecimal characters. FreeClimb logs generated while processing this request will include this requestId. If it is not provided, FreeClimb will generate a requestId and return it as a header in the response (e.g., X-Pulse-Request-Id: &lt;requestId&gt;). | [optional] | . Code Sample . require &#39;Freeclimb&#39; instance = Freeclimb::CreateConferenceRequest.new(_alias: null, play_beep: null, record: null, wait_url: null, status_callback_url: null, request_id: null) .",
    "url": "http://localhost:4000/rubydocs/docs/CreateConferenceRequest.html",
    "relUrl": "/docs/CreateConferenceRequest.html"
  }
  ,"26": {
    "title": "Freeclimb::DequeueMemberRequest",
    "content": "Freeclimb::DequeueMemberRequest . Properties . Name Type Description Notes . request_id | String | RequestId for this request starting with prefix RQ followed by 40 hexadecimal characters. FreeClimb logs generated while processing this request include this requestId. If it is not provided, FreeClimb generates a requestId and returns it as a header in the response (e.g., X-Pulse-Request-Id: &lt;requestId&gt;). | [optional] | . Code Sample . require &#39;Freeclimb&#39; instance = Freeclimb::DequeueMemberRequest.new(request_id: null) .",
    "url": "http://localhost:4000/rubydocs/docs/DequeueMemberRequest.html",
    "relUrl": "/docs/DequeueMemberRequest.html"
  }
  ,"27": {
    "title": "",
    "content": ". parent: Models — . . parent: Models — . . parent: Models — . . parent: Models — . FreeClimb::FilterLogsRequest . Properties . Name Type Description Notes . pql | String | The filter query for retrieving logs. See Performance Query Language below. |   | . request_id | String | RequestId for this request starting with prefix RQ followed by 40 hexadecimal characters. FreeClimb logs generated while processing this request will include this requestId. If it is not provided, FreeClimb will generate a requestId and return it as a header in the response (e.g., X-Pulse-Request-Id: &lt;requestId&gt;). | [optional] | . Code Sample . require &#39;Freeclimb&#39; instance = Freeclimb::FilterLogsRequest.new(pql: null, request_id: null) .",
    "url": "http://localhost:4000/rubydocs/docs/FilterLogsRequest.html",
    "relUrl": "/docs/FilterLogsRequest.html"
  }
  ,"28": {
    "title": "FreeClimb::IncomingNumberList",
    "content": "FreeClimb::IncomingNumberList . Properties . Name Type Description Notes . total | Integer | Total amount of requested resource. | [optional] | . start | Integer | Resource index at start of current page | [optional] | . _end | Integer | Resource index at end of current page | [optional] | . page | Integer | Current page | [optional] | . num_pages | Integer | Total number of pages | [optional] | . page_size | Integer | Number of items per page | [optional] | . next_page_uri | String | Uri to retrieve the next page of items | [optional] | . incoming_phone_numbers | Array&lt;IncomingNumberResult&gt; |   | [optional] | . Code Sample . require &#39;Freeclimb&#39; instance = Freeclimb::IncomingNumberList.new(total: null, start: null, _end: null, page: null, num_pages: null, page_size: null, next_page_uri: null, incoming_phone_numbers: null) .",
    "url": "http://localhost:4000/rubydocs/docs/IncomingNumberList.html",
    "relUrl": "/docs/IncomingNumberList.html"
  }
  ,"29": {
    "title": "FreeClimb::IncomingNumberListAllOf",
    "content": "FreeClimb::IncomingNumberListAllOf . Properties . Name Type Description Notes . incoming_phone_numbers | Array&lt;IncomingNumberResult&gt; |   | [optional] | . Code Sample . require &#39;Freeclimb&#39; instance = Freeclimb::IncomingNumberListAllOf.new(incoming_phone_numbers: null) .",
    "url": "http://localhost:4000/rubydocs/docs/IncomingNumberListAllOf.html",
    "relUrl": "/docs/IncomingNumberListAllOf.html"
  }
  ,"30": {
    "title": "FreeClimb::IncomingNumberRequest",
    "content": "FreeClimb::IncomingNumberRequest . Properties . Name Type Description Notes . application_id | String | ID of the Application that should handle calls to this number. | [optional] | . _alias | String | Description for this phone number. | [optional] | . request_id | String | RequestId for this request starting with prefix `RQ` followed by 40 hexadecimal characters. FreeClimb logs that are generated while processing this request will include this requestId. If it is not provided, FreeClimb will generate a requestId and return it as a header in the response (e.g., `X-Pulse-Request-Id: &lt;requestId&gt;`). | [optional] | . Code Sample . require &#39;Freeclimb&#39; instance = Freeclimb::IncomingNumberRequest.new(application_id: null, _alias: null, request_id: null) .",
    "url": "http://localhost:4000/rubydocs/docs/IncomingNumberRequest.html",
    "relUrl": "/docs/IncomingNumberRequest.html"
  }
  ,"31": {
    "title": "FreeClimb::IncomingNumberResult",
    "content": "FreeClimb::IncomingNumberResult . Properties . Name Type Description Notes . uri | String | The URI for this resource, relative to /apiserver. | [optional] | . date_created | String | The date that this resource was created (GMT) in RFC 1123 format (e.g., Mon, 15 Jun 2009 20:45:30 GMT). | [optional] | . date_updated | String | The date that this resource was last updated (GMT) in RFC 1123 format (e.g., Mon, 15 Jun 2009 20:45:30 GMT). | [optional] | . revision | Integer | Revision count for the resource. This count is set to 1 on creation and is incremented every time it is updated. | [optional] | . phone_number_id | String | String that uniquely identifies this phone number resource. | [optional] | . account_id | String | ID of the account that owns this phone number. | [optional] | . application_id | String | ID of the Application that FreeClimb should contact if a Call or SMS arrives for this phone number or a Call from this number is placed. An incoming phone number is not useful until associated with an applicationId. | [optional] | . phone_number | String | Phone number in E.164 format. | [optional] | . _alias | String | Description for this phone number. Typically the conventionally-formatted version of the phone number. | [optional] | . region | String | State or province of this phone number. | [optional] | . country | String | Country of this phone number. | [optional] | . voice_enabled | Boolean | Indicates whether the phone number can handle Calls. Typically set to true for all numbers. | [optional] | . sms_enabled | Boolean | Indication of whether the phone number can handle sending and receiving SMS messages. Typically set to true for all numbers. | [optional] | . Code Sample . require &#39;Freeclimb&#39; instance = Freeclimb::IncomingNumberResult.new(uri: null, date_created: null, date_updated: null, revision: null, phone_number_id: null, account_id: null, application_id: null, phone_number: null, _alias: null, region: null, country: null, voice_enabled: null, sms_enabled: null) .",
    "url": "http://localhost:4000/rubydocs/docs/IncomingNumberResult.html",
    "relUrl": "/docs/IncomingNumberResult.html"
  }
  ,"32": {
    "title": "FreeClimb::IncomingNumberResultAllOf",
    "content": "FreeClimb::IncomingNumberResultAllOf . Properties . Name Type Description Notes . phone_number_id | String | String that uniquely identifies this phone number resource. | [optional] | . account_id | String | ID of the account that owns this phone number. | [optional] | . application_id | String | ID of the Application that FreeClimb should contact if a Call or SMS arrives for this phone number or a Call from this number is placed. An incoming phone number is not useful until associated with an applicationId. | [optional] | . phone_number | String | Phone number in E.164 format. | [optional] | . _alias | String | Description for this phone number. Typically the conventionally-formatted version of the phone number. | [optional] | . region | String | State or province of this phone number. | [optional] | . country | String | Country of this phone number. | [optional] | . voice_enabled | Boolean | Indicates whether the phone number can handle Calls. Typically set to true for all numbers. | [optional] | . sms_enabled | Boolean | Indication of whether the phone number can handle sending and receiving SMS messages. Typically set to true for all numbers. | [optional] | . Code Sample . require &#39;Freeclimb&#39; instance = Freeclimb::IncomingNumberResultAllOf.new(phone_number_id: null, account_id: null, application_id: null, phone_number: null, _alias: null, region: null, country: null, voice_enabled: null, sms_enabled: null) .",
    "url": "http://localhost:4000/rubydocs/docs/IncomingNumberResultAllOf.html",
    "relUrl": "/docs/IncomingNumberResultAllOf.html"
  }
  ,"33": {
    "title": "FreeClimb::LogList",
    "content": "FreeClimb::LogList . Properties . Name Type Description Notes . total | Integer | Total amount of requested resource. | [optional] | . start | Integer | Resource index at start of current page | [optional] | . _end | Integer | Resource index at end of current page | [optional] | . page | Integer | Current page | [optional] | . num_pages | Integer | Total number of pages | [optional] | . page_size | Integer | Number of items per page | [optional] | . next_page_uri | String | Uri to retrieve the next page of items | [optional] | . logs | Array&lt;LogResult&gt; |   | [optional] | . Code Sample . require &#39;Freeclimb&#39; instance = Freeclimb::LogList.new(total: null, start: null, _end: null, page: null, num_pages: null, page_size: null, next_page_uri: null, logs: null) .",
    "url": "http://localhost:4000/rubydocs/docs/LogList.html",
    "relUrl": "/docs/LogList.html"
  }
  ,"34": {
    "title": "FreeClimb::LogListAllOf",
    "content": "FreeClimb::LogListAllOf . Properties . Name Type Description Notes . logs | Array&lt;LogResult&gt; |   | [optional] | . Code Sample . require &#39;Freeclimb&#39; instance = Freeclimb::LogListAllOf.new(logs: null) .",
    "url": "http://localhost:4000/rubydocs/docs/LogListAllOf.html",
    "relUrl": "/docs/LogListAllOf.html"
  }
  ,"35": {
    "title": "FreeClimb::LogResult",
    "content": "FreeClimb::LogResult . Properties . Name Type Description Notes . timestamp | Integer | Time that the log was generated. The time is represented as microseconds since the Unix Epoch. | [optional] | . level | String | Level of the log. Possible values are info, warning, and error. | [optional] | . request_id | String | ID of the request associated with the log. The requestId is propagated across all logs generated by FreeClimb when processing a request. | [optional] | . account_id | String | ID of the account that this log was generated under. | [optional] | . call_id | String | ID of the Call associated with the log. Can be set to null if the log was generated without regard to a specific Call. | [optional] | . message | String | A simple string describing the event being logged. | [optional] | . metadata | Object | JSON document containing metadata about the event. Some log messages may include request and response header content in this field. | [optional] | . Code Sample . require &#39;Freeclimb&#39; instance = Freeclimb::LogResult.new(timestamp: null, level: null, request_id: null, account_id: null, call_id: null, message: null, metadata: null) .",
    "url": "http://localhost:4000/rubydocs/docs/LogResult.html",
    "relUrl": "/docs/LogResult.html"
  }
  ,"36": {
    "title": "FreeClimb::MakeCallRequest",
    "content": "FreeClimb::MakeCallRequest . Properties . Name Type Description Notes . from | String | Phone number to use as the caller ID. This can be: (a) The To or From number provided in FreeClimb&#39;s initial request to your app or (b) Any incoming phone number you have purchased from FreeClimb. |   | . to | String | Phone number to place the Call to. |   | . application_id | String | ID of the application FreeClimb should use to handle this phone call. FreeClimb will use the `callConnectUrl` and `statusCallbackUrl` set on the application. The application must have a `callConnectUrl` associated with it or an error will be returned. The application’s `voiceUrl` parameter is not used for outbound calls. |   | . send_digits | String | String of digits to dial after connecting to the number. It can include digits `0-9`, ``, and `#`, and allows embedding a pause between the output of individual digits. The default pause is 500 milliseconds. So, a string such as *1234# will be played in 2 seconds because of the 4 standard pauses implied within the string. A custom pause is specified by including a positive integer wrapped in curly braces: {n}. For more information, see sendDigits examples below. | [optional] | . if_machine | String | Specifies how FreeClimb should handle this Call if an answering machine answers it. | [optional] | . if_machine_url | String | This attribute specifies a URL to which FreeClimb will make a POST request when an answering machine or a fax machine is detected. This URL is required if the ifMachine flag is set to redirect. When ifMachine is set to hangup, ifMachineUrl must not be included in the request. For more information, see ifMachineUrl example below. | [optional] | . timeout | Integer | Number of seconds that FreeClimb should allow the phone to ring before assuming there is no answer. Default is 30 seconds. Maximum allowed ring-time is determined by the target phone&#39;s provider. Note that most providers limit ring-time to 120 seconds. | [optional] | . request_id | String | The requestId for this request starting with prefix &quot;RQ &quot; followed by 40 hexadecimal characters. FreeClimb logs generated while processing this request will include this requestId. If it is not provided, FreeClimb will generate a requestId and return it as a header in the response (e.g. `X-Pulse-Request-Id: &lt;requestId&gt;`). | [optional] | . parent_call_id | String | The ID of the parent Call in the case that this new Call is meant to be treated as a child of an existing Call. This attribute should be included when possible to reduce latency when adding child calls to Conferences containing the parent Call. A call can only be used as a parent once the call is in progress or as an inbound call that is still ringing. An outbound call is considered to be in progress once the outdialConnect or outdialApiConnect webhook is invoked. An inbound call is ringing when the inbound webhook is invoked. | [optional] | . Code Sample . require &#39;Freeclimb&#39; instance = Freeclimb::MakeCallRequest.new(from: null, to: null, application_id: null, send_digits: null, if_machine: null, if_machine_url: null, timeout: null, request_id: null, parent_call_id: null) .",
    "url": "http://localhost:4000/rubydocs/docs/MakeCallRequest.html",
    "relUrl": "/docs/MakeCallRequest.html"
  }
  ,"37": {
    "title": "FreeClimb::MessageRequest",
    "content": "FreeClimb::MessageRequest . Properties . Name Type Description Notes . uri | String | The URI for this resource, relative to /apiserver. | [optional] | . date_created | String | The date that this resource was created (GMT) in RFC 1123 format (e.g., Mon, 15 Jun 2009 20:45:30 GMT). | [optional] | . date_updated | String | The date that this resource was last updated (GMT) in RFC 1123 format (e.g., Mon, 15 Jun 2009 20:45:30 GMT). | [optional] | . revision | Integer | Revision count for the resource. This count is set to 1 on creation and is incremented every time it is updated. | [optional] | . from | String | Phone number to use as the sender. This must be an incoming phone number that you have purchased from FreeClimb. |   | . to | String | Phone number to receive the message. Must be within FreeClimb&#39;s service area. |   | . text | String | Text contained in the message (maximum 160 characters). Note: For text, only ASCII characters are supported. |   | . notification_url | String | When the Message changes status, this URL is invoked using HTTP POST with the messageStatus parameters. Note: This is a notification only; any PerCL returned is ignored. | [optional] | . request_id | String | RequestId for this request, starting with prefix RQ followed by 40 hexadecimal characters. FreeClimb logs generated while processing this request include this requestId. If it is not provided, FreeClimb will generate a requestId and return it as a header in the response (e.g., X-Pulse-Request-Id: &lt;requestId&gt;). | [optional] | . account_id | String | String that uniquely identifies this account resource. | [optional] | . Code Sample . require &#39;Freeclimb&#39; instance = Freeclimb::MessageRequest.new(uri: null, date_created: null, date_updated: null, revision: null, from: null, to: null, text: null, notification_url: null, request_id: null, account_id: null) .",
    "url": "http://localhost:4000/rubydocs/docs/MessageRequest.html",
    "relUrl": "/docs/MessageRequest.html"
  }
  ,"38": {
    "title": "FreeClimb::MessageRequestAllOf",
    "content": "FreeClimb::MessageRequestAllOf . Properties . Name Type Description Notes . from | String | Phone number to use as the sender. This must be an incoming phone number that you have purchased from FreeClimb. |   | . to | String | Phone number to receive the message. Must be within FreeClimb&#39;s service area. |   | . text | String | Text contained in the message (maximum 160 characters). Note: For text, only ASCII characters are supported. |   | . notification_url | String | When the Message changes status, this URL is invoked using HTTP POST with the messageStatus parameters. Note: This is a notification only; any PerCL returned is ignored. | [optional] | . request_id | String | RequestId for this request, starting with prefix RQ followed by 40 hexadecimal characters. FreeClimb logs generated while processing this request include this requestId. If it is not provided, FreeClimb will generate a requestId and return it as a header in the response (e.g., X-Pulse-Request-Id: &lt;requestId&gt;). | [optional] | . account_id | String | String that uniquely identifies this account resource. | [optional] | . Code Sample . require &#39;Freeclimb&#39; instance = Freeclimb::MessageRequestAllOf.new(from: null, to: null, text: null, notification_url: null, request_id: null, account_id: null) .",
    "url": "http://localhost:4000/rubydocs/docs/MessageRequestAllOf.html",
    "relUrl": "/docs/MessageRequestAllOf.html"
  }
  ,"39": {
    "title": "FreeClimb::MessageResult",
    "content": "FreeClimb::MessageResult . Properties . Name Type Description Notes . uri | String | The URI for this resource, relative to /apiserver. | [optional] | . date_created | String | The date that this resource was created (GMT) in RFC 1123 format (e.g., Mon, 15 Jun 2009 20:45:30 GMT). | [optional] | . date_updated | String | The date that this resource was last updated (GMT) in RFC 1123 format (e.g., Mon, 15 Jun 2009 20:45:30 GMT). | [optional] | . revision | Integer | Revision count for the resource. This count is set to 1 on creation and is incremented every time it is updated. | [optional] | . account_id | String | String that uniquely identifies this account resource. | [optional] | . message_id | String | String that uniquely identifies this message resource | [optional] | . status | String | Indicates the state of the message through the message lifecycle including: new, queued, rejected, sending, sent, failed, received | [optional] | . from | String | Phone number in E.164 format that sent the message. | [optional] | . to | String | Phone number in E.164 format that received the message. | [optional] | . text | String | Message contents | [optional] | . direction | String | Noting whether the message was inbound or outbound | [optional] | . notification_url | String | URL invoked when message sent | [optional] | . Code Sample . require &#39;Freeclimb&#39; instance = Freeclimb::MessageResult.new(uri: null, date_created: null, date_updated: null, revision: null, account_id: null, message_id: null, status: null, from: null, to: null, text: null, direction: null, notification_url: null) .",
    "url": "http://localhost:4000/rubydocs/docs/MessageResult.html",
    "relUrl": "/docs/MessageResult.html"
  }
  ,"40": {
    "title": "FreeClimb::MessageResultAllOf",
    "content": "FreeClimb::MessageResultAllOf . Properties . Name Type Description Notes . account_id | String | String that uniquely identifies this account resource. | [optional] | . message_id | String | String that uniquely identifies this message resource | [optional] | . status | String | Indicates the state of the message through the message lifecycle including: new, queued, rejected, sending, sent, failed, received | [optional] | . from | String | Phone number in E.164 format that sent the message. | [optional] | . to | String | Phone number in E.164 format that received the message. | [optional] | . text | String | Message contents | [optional] | . direction | String | Noting whether the message was inbound or outbound | [optional] | . notification_url | String | URL invoked when message sent | [optional] | . Code Sample . require &#39;Freeclimb&#39; instance = Freeclimb::MessageResultAllOf.new(account_id: null, message_id: null, status: null, from: null, to: null, text: null, direction: null, notification_url: null) .",
    "url": "http://localhost:4000/rubydocs/docs/MessageResultAllOf.html",
    "relUrl": "/docs/MessageResultAllOf.html"
  }
  ,"41": {
    "title": "FreeClimb::MessagesList",
    "content": "FreeClimb::MessagesList . Properties . Name Type Description Notes . total | Integer | Total amount of requested resource. | [optional] | . start | Integer | Resource index at start of current page | [optional] | . _end | Integer | Resource index at end of current page | [optional] | . page | Integer | Current page | [optional] | . num_pages | Integer | Total number of pages | [optional] | . page_size | Integer | Number of items per page | [optional] | . next_page_uri | String | Uri to retrieve the next page of items | [optional] | . messages | Array&lt;MessageResult&gt; | Array of messages | [optional] | . Code Sample . require &#39;Freeclimb&#39; instance = Freeclimb::MessagesList.new(total: null, start: null, _end: null, page: null, num_pages: null, page_size: null, next_page_uri: null, messages: null) .",
    "url": "http://localhost:4000/rubydocs/docs/MessagesList.html",
    "relUrl": "/docs/MessagesList.html"
  }
  ,"42": {
    "title": "FreeClimb::MessagesListAllOf",
    "content": "FreeClimb::MessagesListAllOf . Properties . Name Type Description Notes . messages | Array&lt;MessageResult&gt; | Array of messages | [optional] | . Code Sample . require &#39;Freeclimb&#39; instance = Freeclimb::MessagesListAllOf.new(messages: null) .",
    "url": "http://localhost:4000/rubydocs/docs/MessagesListAllOf.html",
    "relUrl": "/docs/MessagesListAllOf.html"
  }
  ,"43": {
    "title": "FreeClimb::MutableResourceModel",
    "content": "FreeClimb::MutableResourceModel . Properties . Name Type Description Notes . uri | String | The URI for this resource, relative to /apiserver. | [optional] | . date_created | String | The date that this resource was created (GMT) in RFC 1123 format (e.g., Mon, 15 Jun 2009 20:45:30 GMT). | [optional] | . date_updated | String | The date that this resource was last updated (GMT) in RFC 1123 format (e.g., Mon, 15 Jun 2009 20:45:30 GMT). | [optional] | . revision | Integer | Revision count for the resource. This count is set to 1 on creation and is incremented every time it is updated. | [optional] | . Code Sample . require &#39;Freeclimb&#39; instance = Freeclimb::MutableResourceModel.new(uri: null, date_created: null, date_updated: null, revision: null) .",
    "url": "http://localhost:4000/rubydocs/docs/MutableResourceModel.html",
    "relUrl": "/docs/MutableResourceModel.html"
  }
  ,"44": {
    "title": "FreeClimb::PaginationModel",
    "content": "FreeClimb::PaginationModel . Properties . Name Type Description Notes . total | Integer | Total amount of requested resource. | [optional] | . start | Integer | Resource index at start of current page | [optional] | . _end | Integer | Resource index at end of current page | [optional] | . page | Integer | Current page | [optional] | . num_pages | Integer | Total number of pages | [optional] | . page_size | Integer | Number of items per page | [optional] | . next_page_uri | String | Uri to retrieve the next page of items | [optional] | . Code Sample . require &#39;Freeclimb&#39; instance = Freeclimb::PaginationModel.new(total: null, start: null, _end: null, page: null, num_pages: null, page_size: null, next_page_uri: null) .",
    "url": "http://localhost:4000/rubydocs/docs/PaginationModel.html",
    "relUrl": "/docs/PaginationModel.html"
  }
  ,"45": {
    "title": "FreeClimb::QueueList",
    "content": "FreeClimb::QueueList . Properties . Name Type Description Notes . total | Integer | Total amount of requested resource. | [optional] | . start | Integer | Resource index at start of current page | [optional] | . _end | Integer | Resource index at end of current page | [optional] | . page | Integer | Current page | [optional] | . num_pages | Integer | Total number of pages | [optional] | . page_size | Integer | Number of items per page | [optional] | . next_page_uri | String | Uri to retrieve the next page of items | [optional] | . queues | Array&lt;QueueResult&gt; |   | [optional] | . Code Sample . require &#39;Freeclimb&#39; instance = Freeclimb::QueueList.new(total: null, start: null, _end: null, page: null, num_pages: null, page_size: null, next_page_uri: null, queues: null) .",
    "url": "http://localhost:4000/rubydocs/docs/QueueList.html",
    "relUrl": "/docs/QueueList.html"
  }
  ,"46": {
    "title": "FreeClimb::QueueListAllOf",
    "content": "FreeClimb::QueueListAllOf . Properties . Name Type Description Notes . queues | Array&lt;QueueResult&gt; |   | [optional] | . Code Sample . require &#39;Freeclimb&#39; instance = Freeclimb::QueueListAllOf.new(queues: null) .",
    "url": "http://localhost:4000/rubydocs/docs/QueueListAllOf.html",
    "relUrl": "/docs/QueueListAllOf.html"
  }
  ,"47": {
    "title": "FreeClimb::QueueMember",
    "content": "FreeClimb::QueueMember . Properties . Name Type Description Notes . uri | String | URI for this Queue Member resource, relative to the API base URL. | [optional] | . call_id | String | ID of the Call associated with this Queue Member. | [optional] | . wait_time | Integer | Number of seconds the Member has been in the queue. | [optional] | . position | Integer | Member&#39;s current position in the Queue, 1 indexed. | [optional] | . date_enqueued | String | Date that the Member was enqueued (GMT), given in RFC 1123 format (e.g., Mon, 15 Jun 2009 20:45:30 GMT). | [optional] | . Code Sample . require &#39;Freeclimb&#39; instance = Freeclimb::QueueMember.new(uri: null, call_id: null, wait_time: null, position: null, date_enqueued: null) .",
    "url": "http://localhost:4000/rubydocs/docs/QueueMember.html",
    "relUrl": "/docs/QueueMember.html"
  }
  ,"48": {
    "title": "FreeClimb::QueueMemberList",
    "content": "FreeClimb::QueueMemberList . Properties . Name Type Description Notes . total | Integer | Total amount of requested resource. | [optional] | . start | Integer | Resource index at start of current page | [optional] | . _end | Integer | Resource index at end of current page | [optional] | . page | Integer | Current page | [optional] | . num_pages | Integer | Total number of pages | [optional] | . page_size | Integer | Number of items per page | [optional] | . next_page_uri | String | Uri to retrieve the next page of items | [optional] | . queue_members | Array&lt;QueueMember&gt; |   | [optional] | . Code Sample . require &#39;Freeclimb&#39; instance = Freeclimb::QueueMemberList.new(total: null, start: null, _end: null, page: null, num_pages: null, page_size: null, next_page_uri: null, queue_members: null) .",
    "url": "http://localhost:4000/rubydocs/docs/QueueMemberList.html",
    "relUrl": "/docs/QueueMemberList.html"
  }
  ,"49": {
    "title": "FreeClimb::QueueMemberListAllOf",
    "content": "FreeClimb::QueueMemberListAllOf . Properties . Name Type Description Notes . queue_members | Array&lt;QueueMember&gt; |   | [optional] | . Code Sample . require &#39;Freeclimb&#39; instance = Freeclimb::QueueMemberListAllOf.new(queue_members: null) .",
    "url": "http://localhost:4000/rubydocs/docs/QueueMemberListAllOf.html",
    "relUrl": "/docs/QueueMemberListAllOf.html"
  }
  ,"50": {
    "title": "FreeClimb::QueueRequest",
    "content": "FreeClimb::QueueRequest . Properties . Name Type Description Notes . _alias | String | Description for this Queue. Max length is 64 characters. | [optional] | . max_size | Integer | Maximum number of calls this queue can hold. Default is 100. Maximum is 1000. Note: Reducing the maxSize of a Queue causes the Queue to reject incoming requests until it shrinks below the new value of maxSize. | [optional] | . request_id | String | RequestId for this request, starting with prefix RQ followed by 40 hexadecimal characters. FreeClimb logs generated while processing this request include this requestId. If this parameter is not provided, FreeClimb generates a requestId and returns it as a header in the response (e.g., X-Pulse-Request-Id: &lt;requestId&gt;). | [optional] | . Code Sample . require &#39;Freeclimb&#39; instance = Freeclimb::QueueRequest.new(_alias: null, max_size: null, request_id: null) .",
    "url": "http://localhost:4000/rubydocs/docs/QueueRequest.html",
    "relUrl": "/docs/QueueRequest.html"
  }
  ,"51": {
    "title": "FreeClimb::QueueResult",
    "content": "FreeClimb::QueueResult . Properties . Name Type Description Notes . uri | String | The URI for this resource, relative to /apiserver. | [optional] | . date_created | String | The date that this resource was created (GMT) in RFC 1123 format (e.g., Mon, 15 Jun 2009 20:45:30 GMT). | [optional] | . date_updated | String | The date that this resource was last updated (GMT) in RFC 1123 format (e.g., Mon, 15 Jun 2009 20:45:30 GMT). | [optional] | . revision | Integer | Revision count for the resource. This count is set to 1 on creation and is incremented every time it is updated. | [optional] | . account_id | String | ID of the account that created this Queue. | [optional] | . queue_id | String | A string that uniquely identifies this Queue resource. | [optional] | . _alias | String | A description for this Queue. | [optional] | . max_size | Integer | The maximum number of Calls permitted in the Queue. Default is 100. Maximum is 1000. | [optional] | . current_size | String | Count of Calls currently in the Queue. | [optional] | . average_wait_time | String | Average wait time (in seconds) of all Calls in the Queue. | [optional] | . subresource_uris | Object | List of subresources for this Queue (which includes Queue members). | [optional] | . Code Sample . require &#39;Freeclimb&#39; instance = Freeclimb::QueueResult.new(uri: null, date_created: null, date_updated: null, revision: null, account_id: null, queue_id: null, _alias: null, max_size: null, current_size: null, average_wait_time: null, subresource_uris: null) .",
    "url": "http://localhost:4000/rubydocs/docs/QueueResult.html",
    "relUrl": "/docs/QueueResult.html"
  }
  ,"52": {
    "title": "FreeClimb::QueueResultAllOf",
    "content": "FreeClimb::QueueResultAllOf . Properties . Name Type Description Notes . account_id | String | ID of the account that created this Queue. | [optional] | . queue_id | String | A string that uniquely identifies this Queue resource. | [optional] | . _alias | String | A description for this Queue. | [optional] | . max_size | Integer | The maximum number of Calls permitted in the Queue. Default is 100. Maximum is 1000. | [optional] | . current_size | String | Count of Calls currently in the Queue. | [optional] | . average_wait_time | String | Average wait time (in seconds) of all Calls in the Queue. | [optional] | . subresource_uris | Object | List of subresources for this Queue (which includes Queue members). | [optional] | . Code Sample . require &#39;Freeclimb&#39; instance = Freeclimb::QueueResultAllOf.new(account_id: null, queue_id: null, _alias: null, max_size: null, current_size: null, average_wait_time: null, subresource_uris: null) .",
    "url": "http://localhost:4000/rubydocs/docs/QueueResultAllOf.html",
    "relUrl": "/docs/QueueResultAllOf.html"
  }
  ,"53": {
    "title": "FreeClimb::RecordingList",
    "content": "FreeClimb::RecordingList . Properties . Name Type Description Notes . total | Integer | Total amount of requested resource. | [optional] | . start | Integer | Resource index at start of current page | [optional] | . _end | Integer | Resource index at end of current page | [optional] | . page | Integer | Current page | [optional] | . num_pages | Integer | Total number of pages | [optional] | . page_size | Integer | Number of items per page | [optional] | . next_page_uri | String | Uri to retrieve the next page of items | [optional] | . recordings | Array&lt;RecordingResult&gt; |   | [optional] | . Code Sample . require &#39;Freeclimb&#39; instance = Freeclimb::RecordingList.new(total: null, start: null, _end: null, page: null, num_pages: null, page_size: null, next_page_uri: null, recordings: null) .",
    "url": "http://localhost:4000/rubydocs/docs/RecordingList.html",
    "relUrl": "/docs/RecordingList.html"
  }
  ,"54": {
    "title": "FreeClimb::RecordingListAllOf",
    "content": "FreeClimb::RecordingListAllOf . Properties . Name Type Description Notes . recordings | Array&lt;RecordingResult&gt; |   | [optional] | . Code Sample . require &#39;Freeclimb&#39; instance = Freeclimb::RecordingListAllOf.new(recordings: null) .",
    "url": "http://localhost:4000/rubydocs/docs/RecordingListAllOf.html",
    "relUrl": "/docs/RecordingListAllOf.html"
  }
  ,"55": {
    "title": "FreeClimb::RecordingResult",
    "content": "FreeClimb::RecordingResult . Properties . Name Type Description Notes . uri | String | The URI for this resource, relative to /apiserver. | [optional] | . date_created | String | The date that this resource was created (GMT) in RFC 1123 format (e.g., Mon, 15 Jun 2009 20:45:30 GMT). | [optional] | . date_updated | String | The date that this resource was last updated (GMT) in RFC 1123 format (e.g., Mon, 15 Jun 2009 20:45:30 GMT). | [optional] | . revision | Integer | Revision count for the resource. This count is set to 1 on creation and is incremented every time it is updated. | [optional] | . recording_id | String | String that uniquely identifies this recording resource. | [optional] | . account_id | String | ID of the account that created this recording. | [optional] | . call_id | String | ID of the Call that was recorded. If a Conference was recorded, this value is empty and the conferenceId property is populated. | [optional] | . duration_sec | Integer | Length of the recording in seconds. | [optional] | . conference_id | String | ID of the Conference that was recorded. If a Call was recorded, this value is empty and the callId property is populated. | [optional] | . Code Sample . require &#39;Freeclimb&#39; instance = Freeclimb::RecordingResult.new(uri: null, date_created: null, date_updated: null, revision: null, recording_id: null, account_id: null, call_id: null, duration_sec: null, conference_id: null) .",
    "url": "http://localhost:4000/rubydocs/docs/RecordingResult.html",
    "relUrl": "/docs/RecordingResult.html"
  }
  ,"56": {
    "title": "FreeClimb::RecordingResultAllOf",
    "content": "FreeClimb::RecordingResultAllOf . Properties . Name Type Description Notes . recording_id | String | String that uniquely identifies this recording resource. | [optional] | . account_id | String | ID of the account that created this recording. | [optional] | . call_id | String | ID of the Call that was recorded. If a Conference was recorded, this value is empty and the conferenceId property is populated. | [optional] | . duration_sec | Integer | Length of the recording in seconds. | [optional] | . conference_id | String | ID of the Conference that was recorded. If a Call was recorded, this value is empty and the callId property is populated. | [optional] | . Code Sample . require &#39;Freeclimb&#39; instance = Freeclimb::RecordingResultAllOf.new(recording_id: null, account_id: null, call_id: null, duration_sec: null, conference_id: null) .",
    "url": "http://localhost:4000/rubydocs/docs/RecordingResultAllOf.html",
    "relUrl": "/docs/RecordingResultAllOf.html"
  }
  ,"57": {
    "title": "FreeClimb::UpdateCallRequest",
    "content": "FreeClimb::UpdateCallRequest . Properties . Name Type Description Notes . status | String | Either `canceled` or `completed`. Specifying `canceled` attempts to hang up calls that are queued without affecting calls already in progress. Specifying `completed` attempts to hang up a call already in progress. |   | . request_id | String | RequestId for this request starting with prefix `RQ` followed by 40 hexadecimal characters. FreeClimb logs generated while processing this request will include this requestId. If it is not provided, FreeClimb will generate a requestId and return it as a header in the response (e.g. `X-Pulse-Request-Id: &lt;requestId&gt;`). | [optional] | . Code Sample . require &#39;Freeclimb&#39; instance = Freeclimb::UpdateCallRequest.new(status: null, request_id: null) .",
    "url": "http://localhost:4000/rubydocs/docs/UpdateCallRequest.html",
    "relUrl": "/docs/UpdateCallRequest.html"
  }
  ,"58": {
    "title": "FreeClimb::UpdateConferenceParticipantRequest",
    "content": "FreeClimb::UpdateConferenceParticipantRequest . Properties . Name Type Description Notes . talk | Boolean | (Optional) Default is `true`. Setting to `false` mutes the Participant. FreeClimb returns an error and ignores any other value. | [optional] | . listen | Boolean | (Optional) Default is `true`. Setting to `false` silences the Conference for this Participant. FreeClimb returns an error and ignores any other value. | [optional] | . request_id | String | ID of this request starting with prefix RQ followed by 40 hexadecimal characters. FreeClimb logs generated while processing this request include this requestId. If this value is not provided, FreeClimb generates a requestId and returns it as a header in the response (e.g., X-Pulse-Request-Id: &lt;requestId&gt;). | [optional] | . Code Sample . require &#39;Freeclimb&#39; instance = Freeclimb::UpdateConferenceParticipantRequest.new(talk: null, listen: null, request_id: null) .",
    "url": "http://localhost:4000/rubydocs/docs/UpdateConferenceParticipantRequest.html",
    "relUrl": "/docs/UpdateConferenceParticipantRequest.html"
  }
  ,"59": {
    "title": "FreeClimb::UpdateConferenceRequest",
    "content": "FreeClimb::UpdateConferenceRequest . Properties . Name Type Description Notes . _alias | String | Description for this conference. Maximum 64 characters. | [optional] | . play_beep | String | Controls when a beep is played. Valid values: `always`, `never`, `entryOnly`, `exitOnly`. | [optional] [default to &#39;always&#39;] | . status | String | New status of the conference. Valid values: `empty` or `terminated`. For more information, see Status Parameter below.** | [optional] | . request_id | String | ID for this request starting with prefix RQ followed by 40 hexadecimal characters. FreeClimb logs generated while processing this request will include this requestId. If it is not provided, FreeClimb will generate a requestId and return it as a header in the response (e.g. X-Pulse-Request-Id: &lt;requestId&gt;). | [optional] | . Code Sample . require &#39;Freeclimb&#39; instance = Freeclimb::UpdateConferenceRequest.new(_alias: null, play_beep: null, status: null, request_id: null) .",
    "url": "http://localhost:4000/rubydocs/docs/UpdateConferenceRequest.html",
    "relUrl": "/docs/UpdateConferenceRequest.html"
  }
  ,"60": {
    "title": "Models",
    "content": "Models .",
    "url": "http://localhost:4000/rubydocs/models.html",
    "relUrl": "/models.html"
  }
  ,"61": {
    "title": "Freeclimb::DefaultApi",
    "content": "Freeclimb::DefaultApi . All URIs are relative to https://www.freeclimb.com/apiserver . Method HTTP request Description . buy_a_phone_number | POST /Accounts/{accountId}/IncomingPhoneNumbers | Buy a Phone Number | . create_a_conference | POST /Accounts/{accountId}/Conferences | Create a Conference | . create_a_queue | POST /Accounts/{accountId}/Queues | Create a Queue | . create_an_application | POST /Accounts/{accountId}/Applications | Create an application | . delete_a_recording | DELETE /Accounts/{accountId}/Recordings/{recordingId} | Delete a Recording | . delete_an_application | DELETE /Accounts/{accountId}/Applications/{applicationId} | Delete an application | . delete_an_incoming_number | DELETE /Accounts/{accountId}/IncomingPhoneNumbers/{phoneNumberId} | Delete an Incoming Number | . dequeue_a_member | POST /Accounts/{accountId}/Queues/{queueId}/Members/{callId} | Dequeue a Member | . dequeue_head_member | POST /Accounts/{accountId}/Queues/{queueId}/Members/Front | Dequeue Head Member | . download_a_recording_file | GET /Accounts/{accountId}/Recordings/{recordingId}/Download | Download a Recording File | . filter_logs | POST /Accounts/{accountId}/Logs | Filter Logs | . get_a_call | GET /Accounts/{accountId}/Calls/{callId} | Get a Call | . get_a_conference | GET /Accounts/{accountId}/Conferences/{conferenceId} | Get a Conference | . get_a_member | GET /Accounts/{accountId}/Queues/{queueId}/Members/{callId} | Get a Member | . get_a_participant | GET /Accounts/{accountId}/Conferences/{conferenceId}/Participants/{callId} | Get a Participant | . get_a_queue | GET /Accounts/{accountId}/Queues/{queueId} | Get a Queue | . get_a_recording | GET /Accounts/{accountId}/Recordings/{recordingId} | Get a Recording | . get_an_account | GET /Accounts/{accountId} | Get an Account | . get_an_application | GET /Accounts/{accountId}/Applications/{applicationId} | Get an Application | . get_an_incoming_number | GET /Accounts/{accountId}/IncomingPhoneNumbers/{phoneNumberId} | Get an Incoming Number | . get_an_sms_message | GET /Accounts/{accountId}/Messages/{messageId} | Get an SMS Message | . get_head_member | GET /Accounts/{accountId}/Queues/{queueId}/Members/Front | Get Head Member | . list_active_queues | GET /Accounts/{accountId}/Queues | List Active Queues | . list_all_account_logs | GET /Accounts/{accountId}/Logs | List All Account Logs | . list_an_application | GET /Accounts/{accountId}/Applications | List applications | . list_available_numbers | GET /AvailablePhoneNumbers | List available numbers | . list_call_logs | GET /Accounts/{accountId}/Calls/{callId}/Logs | List Call Logs | . list_call_recordings | GET /Accounts/{accountId}/Calls/{callId}/Recordings | List Call Recordings | . list_calls | GET /Accounts/{accountId}/Calls | List Calls | . list_conferences | GET /Accounts/{accountId}/Conferences | List Conferences | . list_incoming_numbers | GET /Accounts/{accountId}/IncomingPhoneNumbers | List Incoming Numbers | . list_members | GET /Accounts/{accountId}/Queues/{queueId}/Members | List Members | . list_participants | GET /Accounts/{accountId}/Conferences/{conferenceId}/Participants | List Participants | . list_recordings | GET /Accounts/{accountId}/Recordings | List Recordings | . list_sms_messages | GET /Accounts/{accountId}/Messages | List SMS Messages | . make_a_call | POST /Accounts/{accountId}/Calls | Make a Call | . remove_a_participant | DELETE /Accounts/{accountId}/Conferences/{conferenceId}/Participants/{callId} | Remove a Participant | . send_an_sms_message | POST /Accounts/{accountId}/Messages | Send an SMS Message | . stream_a_recording_file | GET /Accounts/{accountId}/Recordings/{recordingId}/Stream | Stream a Recording File | . update_a_conference | POST /Accounts/{accountId}/Conferences/{conferenceId} | Update a Conference | . update_a_live_call | POST /Accounts/{accountId}/Calls/{callId} | Update a Live Call | . update_a_participant | POST /Accounts/{accountId}/Conferences/{conferenceId}/Participants/{callId} | Update a Participant | . update_a_queue | POST /Accounts/{accountId}/Queues/{queueId} | Update a Queue | . update_an_account | POST /Accounts/{accountId} | Manage an account | . update_an_application | POST /Accounts/{accountId}/Applications/{applicationId} | Update an application | . update_an_incoming_number | POST /Accounts/{accountId}/IncomingPhoneNumbers/{phoneNumberId} | Update an Incoming Number | . buy_a_phone_number . IncomingNumberResult buy_a_phone_number(opts) . Buy a Phone Number . Example . # load the gem require &#39;freeclimb&#39; # setup authorization Freeclimb.configure do |config| # Configure HTTP basic authorization: fc config.username = &#39;ACCOUNT ID&#39; config.password = &#39;AUTH TOKEN&#39; end api_instance = Freeclimb::DefaultApi.new opts = { buy_incoming_number_request: Freeclimb::BuyIncomingNumberRequest.new # BuyIncomingNumberRequest | Incoming Number transaction details } begin #Buy a Phone Number result = api_instance.buy_a_phone_number(opts) p result rescue Freeclimb::ApiError =&gt; e puts &quot;Exception when calling DefaultApi-&gt;buy_a_phone_number: #{e}&quot; end . Parameters . Name Type Description Notes . buy_incoming_number_request | BuyIncomingNumberRequest | Incoming Number transaction details | [optional] | . Return type . IncomingNumberResult . Authorization . fc . HTTP request headers . Content-Type: application/json | Accept: application/json | . create_a_conference . ConferenceResult create_a_conference(opts) . Create a Conference . Example . # load the gem require &#39;freeclimb&#39; # setup authorization Freeclimb.configure do |config| # Configure HTTP basic authorization: fc config.username = &#39;ACCOUNT ID&#39; config.password = &#39;AUTH TOKEN&#39; end api_instance = Freeclimb::DefaultApi.new opts = { create_conference_request: Freeclimb::CreateConferenceRequest.new # CreateConferenceRequest | Conference to create } begin #Create a Conference result = api_instance.create_a_conference(opts) p result rescue Freeclimb::ApiError =&gt; e puts &quot;Exception when calling DefaultApi-&gt;create_a_conference: #{e}&quot; end . Parameters . Name Type Description Notes . create_conference_request | CreateConferenceRequest | Conference to create | [optional] | . Return type . ConferenceResult . Authorization . fc . HTTP request headers . Content-Type: application/json | Accept: application/json | . create_a_queue . QueueResult create_a_queue(opts) . Create a Queue . Example . # load the gem require &#39;freeclimb&#39; # setup authorization Freeclimb.configure do |config| # Configure HTTP basic authorization: fc config.username = &#39;ACCOUNT ID&#39; config.password = &#39;AUTH TOKEN&#39; end api_instance = Freeclimb::DefaultApi.new opts = { queue_request: Freeclimb::QueueRequest.new # QueueRequest | Queue details used to create a queue } begin #Create a Queue result = api_instance.create_a_queue(opts) p result rescue Freeclimb::ApiError =&gt; e puts &quot;Exception when calling DefaultApi-&gt;create_a_queue: #{e}&quot; end . Parameters . Name Type Description Notes . queue_request | QueueRequest | Queue details used to create a queue | [optional] | . Return type . QueueResult . Authorization . fc . HTTP request headers . Content-Type: application/json | Accept: application/json | . create_an_application . ApplicationResult create_an_application(opts) . Create an application . Example . # load the gem require &#39;freeclimb&#39; # setup authorization Freeclimb.configure do |config| # Configure HTTP basic authorization: fc config.username = &#39;ACCOUNT ID&#39; config.password = &#39;AUTH TOKEN&#39; end api_instance = Freeclimb::DefaultApi.new opts = { application_request: Freeclimb::ApplicationRequest.new # ApplicationRequest | Application Details } begin #Create an application result = api_instance.create_an_application(opts) p result rescue Freeclimb::ApiError =&gt; e puts &quot;Exception when calling DefaultApi-&gt;create_an_application: #{e}&quot; end . Parameters . Name Type Description Notes . application_request | ApplicationRequest | Application Details | [optional] | . Return type . ApplicationResult . Authorization . fc . HTTP request headers . Content-Type: application/json | Accept: application/json | . delete_a_recording . delete_a_recording(recording_id) . Delete a Recording . Example . # load the gem require &#39;freeclimb&#39; # setup authorization Freeclimb.configure do |config| # Configure HTTP basic authorization: fc config.username = &#39;ACCOUNT ID&#39; config.password = &#39;AUTH TOKEN&#39; end api_instance = Freeclimb::DefaultApi.new recording_id = &#39;recording_id_example&#39; # String | String that uniquely identifies this recording resource. begin #Delete a Recording api_instance.delete_a_recording(recording_id) rescue Freeclimb::ApiError =&gt; e puts &quot;Exception when calling DefaultApi-&gt;delete_a_recording: #{e}&quot; end . Parameters . Name Type Description Notes . recording_id | String | String that uniquely identifies this recording resource. |   | . Return type . nil (empty response body) . Authorization . fc . HTTP request headers . Content-Type: Not defined | Accept: Not defined | . delete_an_application . delete_an_application(application_id) . Delete an application . Example . # load the gem require &#39;freeclimb&#39; # setup authorization Freeclimb.configure do |config| # Configure HTTP basic authorization: fc config.username = &#39;ACCOUNT ID&#39; config.password = &#39;AUTH TOKEN&#39; end api_instance = Freeclimb::DefaultApi.new application_id = &#39;application_id_example&#39; # String | String that uniquely identifies this application resource. begin #Delete an application api_instance.delete_an_application(application_id) rescue Freeclimb::ApiError =&gt; e puts &quot;Exception when calling DefaultApi-&gt;delete_an_application: #{e}&quot; end . Parameters . Name Type Description Notes . application_id | String | String that uniquely identifies this application resource. |   | . Return type . nil (empty response body) . Authorization . fc . HTTP request headers . Content-Type: Not defined | Accept: Not defined | . delete_an_incoming_number . delete_an_incoming_number(phone_number_id) . Delete an Incoming Number . Example . # load the gem require &#39;freeclimb&#39; # setup authorization Freeclimb.configure do |config| # Configure HTTP basic authorization: fc config.username = &#39;ACCOUNT ID&#39; config.password = &#39;AUTH TOKEN&#39; end api_instance = Freeclimb::DefaultApi.new phone_number_id = &#39;phone_number_id_example&#39; # String | String that uniquely identifies this phone number resource. begin #Delete an Incoming Number api_instance.delete_an_incoming_number(phone_number_id) rescue Freeclimb::ApiError =&gt; e puts &quot;Exception when calling DefaultApi-&gt;delete_an_incoming_number: #{e}&quot; end . Parameters . Name Type Description Notes . phone_number_id | String | String that uniquely identifies this phone number resource. |   | . Return type . nil (empty response body) . Authorization . fc . HTTP request headers . Content-Type: Not defined | Accept: Not defined | . dequeue_a_member . QueueMember dequeue_a_member(queue_id, call_id, opts) . Dequeue a Member . Example . # load the gem require &#39;freeclimb&#39; # setup authorization Freeclimb.configure do |config| # Configure HTTP basic authorization: fc config.username = &#39;ACCOUNT ID&#39; config.password = &#39;AUTH TOKEN&#39; end api_instance = Freeclimb::DefaultApi.new queue_id = &#39;queue_id_example&#39; # String | String that uniquely identifies the Queue that the Member belongs to. call_id = &#39;call_id_example&#39; # String | ID if the Call that the Member belongs to opts = { dequeue_member_request: Freeclimb::DequeueMemberRequest.new # DequeueMemberRequest | Dequeue member request details } begin #Dequeue a Member result = api_instance.dequeue_a_member(queue_id, call_id, opts) p result rescue Freeclimb::ApiError =&gt; e puts &quot;Exception when calling DefaultApi-&gt;dequeue_a_member: #{e}&quot; end . Parameters . Name Type Description Notes . queue_id | String | String that uniquely identifies the Queue that the Member belongs to. |   | . call_id | String | ID if the Call that the Member belongs to |   | . dequeue_member_request | DequeueMemberRequest | Dequeue member request details | [optional] | . Return type . QueueMember . Authorization . fc . HTTP request headers . Content-Type: application/json | Accept: application/json | . dequeue_head_member . QueueMember dequeue_head_member(queue_id, opts) . Dequeue Head Member . Example . # load the gem require &#39;freeclimb&#39; # setup authorization Freeclimb.configure do |config| # Configure HTTP basic authorization: fc config.username = &#39;ACCOUNT ID&#39; config.password = &#39;AUTH TOKEN&#39; end api_instance = Freeclimb::DefaultApi.new queue_id = &#39;queue_id_example&#39; # String | String that uniquely identifies this queue resource. opts = { dequeue_member_request: Freeclimb::DequeueMemberRequest.new # DequeueMemberRequest | Dequeue head member request details } begin #Dequeue Head Member result = api_instance.dequeue_head_member(queue_id, opts) p result rescue Freeclimb::ApiError =&gt; e puts &quot;Exception when calling DefaultApi-&gt;dequeue_head_member: #{e}&quot; end . Parameters . Name Type Description Notes . queue_id | String | String that uniquely identifies this queue resource. |   | . dequeue_member_request | DequeueMemberRequest | Dequeue head member request details | [optional] | . Return type . QueueMember . Authorization . fc . HTTP request headers . Content-Type: application/json | Accept: application/json | . download_a_recording_file . File download_a_recording_file(recording_id) . Download a Recording File . Example . # load the gem require &#39;freeclimb&#39; # setup authorization Freeclimb.configure do |config| # Configure HTTP basic authorization: fc config.username = &#39;ACCOUNT ID&#39; config.password = &#39;AUTH TOKEN&#39; end api_instance = Freeclimb::DefaultApi.new recording_id = &#39;recording_id_example&#39; # String | String that uniquely identifies this recording resource. begin #Download a Recording File result = api_instance.download_a_recording_file(recording_id) p result rescue Freeclimb::ApiError =&gt; e puts &quot;Exception when calling DefaultApi-&gt;download_a_recording_file: #{e}&quot; end . Parameters . Name Type Description Notes . recording_id | String | String that uniquely identifies this recording resource. |   | . Return type . File . Authorization . fc . HTTP request headers . Content-Type: Not defined | Accept: audio/x-wav | . filter_logs . LogList filter_logs(opts) . Filter Logs . Example . # load the gem require &#39;freeclimb&#39; # setup authorization Freeclimb.configure do |config| # Configure HTTP basic authorization: fc config.username = &#39;ACCOUNT ID&#39; config.password = &#39;AUTH TOKEN&#39; end api_instance = Freeclimb::DefaultApi.new opts = { filter_logs_request: Freeclimb::FilterLogsRequest.new # FilterLogsRequest | Filter logs request paramters } begin #Filter Logs result = api_instance.filter_logs(opts) p result rescue Freeclimb::ApiError =&gt; e puts &quot;Exception when calling DefaultApi-&gt;filter_logs: #{e}&quot; end . Parameters . Name Type Description Notes . filter_logs_request | FilterLogsRequest | Filter logs request paramters | [optional] | . Return type . LogList . Authorization . fc . HTTP request headers . Content-Type: application/json | Accept: application/json | . get_a_call . CallResult get_a_call(call_id) . Get a Call . Example . # load the gem require &#39;freeclimb&#39; # setup authorization Freeclimb.configure do |config| # Configure HTTP basic authorization: fc config.username = &#39;ACCOUNT ID&#39; config.password = &#39;AUTH TOKEN&#39; end api_instance = Freeclimb::DefaultApi.new call_id = &#39;call_id_example&#39; # String | String that uniquely identifies this call resource. begin #Get a Call result = api_instance.get_a_call(call_id) p result rescue Freeclimb::ApiError =&gt; e puts &quot;Exception when calling DefaultApi-&gt;get_a_call: #{e}&quot; end . Parameters . Name Type Description Notes . call_id | String | String that uniquely identifies this call resource. |   | . Return type . CallResult . Authorization . fc . HTTP request headers . Content-Type: Not defined | Accept: application/json | . get_a_conference . ConferenceResult get_a_conference(conference_id) . Get a Conference . Example . # load the gem require &#39;freeclimb&#39; # setup authorization Freeclimb.configure do |config| # Configure HTTP basic authorization: fc config.username = &#39;ACCOUNT ID&#39; config.password = &#39;AUTH TOKEN&#39; end api_instance = Freeclimb::DefaultApi.new conference_id = &#39;conference_id_example&#39; # String | A string that uniquely identifies this conference resource. begin #Get a Conference result = api_instance.get_a_conference(conference_id) p result rescue Freeclimb::ApiError =&gt; e puts &quot;Exception when calling DefaultApi-&gt;get_a_conference: #{e}&quot; end . Parameters . Name Type Description Notes . conference_id | String | A string that uniquely identifies this conference resource. |   | . Return type . ConferenceResult . Authorization . fc . HTTP request headers . Content-Type: Not defined | Accept: application/json | . get_a_member . QueueMember get_a_member(queue_id, call_id) . Get a Member . Example . # load the gem require &#39;freeclimb&#39; # setup authorization Freeclimb.configure do |config| # Configure HTTP basic authorization: fc config.username = &#39;ACCOUNT ID&#39; config.password = &#39;AUTH TOKEN&#39; end api_instance = Freeclimb::DefaultApi.new queue_id = &#39;queue_id_example&#39; # String | String that uniquely identifies the Queue that the Member belongs to. call_id = &#39;call_id_example&#39; # String | ID of the Call that the Member belongs to begin #Get a Member result = api_instance.get_a_member(queue_id, call_id) p result rescue Freeclimb::ApiError =&gt; e puts &quot;Exception when calling DefaultApi-&gt;get_a_member: #{e}&quot; end . Parameters . Name Type Description Notes . queue_id | String | String that uniquely identifies the Queue that the Member belongs to. |   | . call_id | String | ID of the Call that the Member belongs to |   | . Return type . QueueMember . Authorization . fc . HTTP request headers . Content-Type: Not defined | Accept: application/json | . get_a_participant . ConferenceParticipantResult get_a_participant(conference_id, call_id) . Get a Participant . Example . # load the gem require &#39;freeclimb&#39; # setup authorization Freeclimb.configure do |config| # Configure HTTP basic authorization: fc config.username = &#39;ACCOUNT ID&#39; config.password = &#39;AUTH TOKEN&#39; end api_instance = Freeclimb::DefaultApi.new conference_id = &#39;conference_id_example&#39; # String | ID of the conference this participant is in. call_id = &#39;call_id_example&#39; # String | ID of the Call associated with this participant. begin #Get a Participant result = api_instance.get_a_participant(conference_id, call_id) p result rescue Freeclimb::ApiError =&gt; e puts &quot;Exception when calling DefaultApi-&gt;get_a_participant: #{e}&quot; end . Parameters . Name Type Description Notes . conference_id | String | ID of the conference this participant is in. |   | . call_id | String | ID of the Call associated with this participant. |   | . Return type . ConferenceParticipantResult . Authorization . fc . HTTP request headers . Content-Type: Not defined | Accept: application/json | . get_a_queue . QueueResult get_a_queue(queue_id) . Get a Queue . Example . # load the gem require &#39;freeclimb&#39; # setup authorization Freeclimb.configure do |config| # Configure HTTP basic authorization: fc config.username = &#39;ACCOUNT ID&#39; config.password = &#39;AUTH TOKEN&#39; end api_instance = Freeclimb::DefaultApi.new queue_id = &#39;queue_id_example&#39; # String | A string that uniquely identifies this queue resource. begin #Get a Queue result = api_instance.get_a_queue(queue_id) p result rescue Freeclimb::ApiError =&gt; e puts &quot;Exception when calling DefaultApi-&gt;get_a_queue: #{e}&quot; end . Parameters . Name Type Description Notes . queue_id | String | A string that uniquely identifies this queue resource. |   | . Return type . QueueResult . Authorization . fc . HTTP request headers . Content-Type: Not defined | Accept: application/json | . get_a_recording . RecordingResult get_a_recording(recording_id) . Get a Recording . Example . # load the gem require &#39;freeclimb&#39; # setup authorization Freeclimb.configure do |config| # Configure HTTP basic authorization: fc config.username = &#39;ACCOUNT ID&#39; config.password = &#39;AUTH TOKEN&#39; end api_instance = Freeclimb::DefaultApi.new recording_id = &#39;recording_id_example&#39; # String | String that uniquely identifies this recording resource. begin #Get a Recording result = api_instance.get_a_recording(recording_id) p result rescue Freeclimb::ApiError =&gt; e puts &quot;Exception when calling DefaultApi-&gt;get_a_recording: #{e}&quot; end . Parameters . Name Type Description Notes . recording_id | String | String that uniquely identifies this recording resource. |   | . Return type . RecordingResult . Authorization . fc . HTTP request headers . Content-Type: Not defined | Accept: application/json | . get_an_account . AccountResult get_an_account . Get an Account . Example . # load the gem require &#39;freeclimb&#39; # setup authorization Freeclimb.configure do |config| # Configure HTTP basic authorization: fc config.username = &#39;ACCOUNT ID&#39; config.password = &#39;AUTH TOKEN&#39; end api_instance = Freeclimb::DefaultApi.new begin #Get an Account result = api_instance.get_an_account p result rescue Freeclimb::ApiError =&gt; e puts &quot;Exception when calling DefaultApi-&gt;get_an_account: #{e}&quot; end . Parameters . This endpoint does not need any parameter. . Return type . AccountResult . Authorization . fc . HTTP request headers . Content-Type: Not defined | Accept: application/json | . get_an_application . ApplicationResult get_an_application(application_id) . Get an Application . Example . # load the gem require &#39;freeclimb&#39; # setup authorization Freeclimb.configure do |config| # Configure HTTP basic authorization: fc config.username = &#39;ACCOUNT ID&#39; config.password = &#39;AUTH TOKEN&#39; end api_instance = Freeclimb::DefaultApi.new application_id = &#39;application_id_example&#39; # String | A string that uniquely identifies this application resource. begin #Get an Application result = api_instance.get_an_application(application_id) p result rescue Freeclimb::ApiError =&gt; e puts &quot;Exception when calling DefaultApi-&gt;get_an_application: #{e}&quot; end . Parameters . Name Type Description Notes . application_id | String | A string that uniquely identifies this application resource. |   | . Return type . ApplicationResult . Authorization . fc . HTTP request headers . Content-Type: Not defined | Accept: application/json | . get_an_incoming_number . IncomingNumberResult get_an_incoming_number(phone_number_id) . Get an Incoming Number . Example . # load the gem require &#39;freeclimb&#39; # setup authorization Freeclimb.configure do |config| # Configure HTTP basic authorization: fc config.username = &#39;ACCOUNT ID&#39; config.password = &#39;AUTH TOKEN&#39; end api_instance = Freeclimb::DefaultApi.new phone_number_id = &#39;phone_number_id_example&#39; # String | String that uniquely identifies this phone number resource. begin #Get an Incoming Number result = api_instance.get_an_incoming_number(phone_number_id) p result rescue Freeclimb::ApiError =&gt; e puts &quot;Exception when calling DefaultApi-&gt;get_an_incoming_number: #{e}&quot; end . Parameters . Name Type Description Notes . phone_number_id | String | String that uniquely identifies this phone number resource. |   | . Return type . IncomingNumberResult . Authorization . fc . HTTP request headers . Content-Type: Not defined | Accept: application/json | . get_an_sms_message . MessageResult get_an_sms_message(message_id) . Get an SMS Message . Example . # load the gem require &#39;freeclimb&#39; # setup authorization Freeclimb.configure do |config| # Configure HTTP basic authorization: fc config.username = &#39;ACCOUNT ID&#39; config.password = &#39;AUTH TOKEN&#39; end api_instance = Freeclimb::DefaultApi.new message_id = &#39;message_id_example&#39; # String | String that uniquely identifies this Message resource. begin #Get an SMS Message result = api_instance.get_an_sms_message(message_id) p result rescue Freeclimb::ApiError =&gt; e puts &quot;Exception when calling DefaultApi-&gt;get_an_sms_message: #{e}&quot; end . Parameters . Name Type Description Notes . message_id | String | String that uniquely identifies this Message resource. |   | . Return type . MessageResult . Authorization . fc . HTTP request headers . Content-Type: Not defined | Accept: application/json | . get_head_member . QueueMember get_head_member(queue_id) . Get Head Member . Example . # load the gem require &#39;freeclimb&#39; # setup authorization Freeclimb.configure do |config| # Configure HTTP basic authorization: fc config.username = &#39;ACCOUNT ID&#39; config.password = &#39;AUTH TOKEN&#39; end api_instance = Freeclimb::DefaultApi.new queue_id = &#39;queue_id_example&#39; # String | String that uniquely identifies the Queue that the Member belongs to. begin #Get Head Member result = api_instance.get_head_member(queue_id) p result rescue Freeclimb::ApiError =&gt; e puts &quot;Exception when calling DefaultApi-&gt;get_head_member: #{e}&quot; end . Parameters . Name Type Description Notes . queue_id | String | String that uniquely identifies the Queue that the Member belongs to. |   | . Return type . QueueMember . Authorization . fc . HTTP request headers . Content-Type: Not defined | Accept: application/json | . list_active_queues . QueueList list_active_queues(opts) . List Active Queues . Example . # load the gem require &#39;freeclimb&#39; # setup authorization Freeclimb.configure do |config| # Configure HTTP basic authorization: fc config.username = &#39;ACCOUNT ID&#39; config.password = &#39;AUTH TOKEN&#39; end api_instance = Freeclimb::DefaultApi.new opts = { _alias: &#39;_alias_example&#39; # String | Return only the Queue resources with aliases that exactly match this name. } begin #List Active Queues result = api_instance.list_active_queues(opts) p result rescue Freeclimb::ApiError =&gt; e puts &quot;Exception when calling DefaultApi-&gt;list_active_queues: #{e}&quot; end . Parameters . Name Type Description Notes . _alias | String | Return only the Queue resources with aliases that exactly match this name. | [optional] | . Return type . QueueList . Authorization . fc . HTTP request headers . Content-Type: Not defined | Accept: application/json | . list_all_account_logs . LogList list_all_account_logs . List All Account Logs . Example . # load the gem require &#39;freeclimb&#39; # setup authorization Freeclimb.configure do |config| # Configure HTTP basic authorization: fc config.username = &#39;ACCOUNT ID&#39; config.password = &#39;AUTH TOKEN&#39; end api_instance = Freeclimb::DefaultApi.new begin #List All Account Logs result = api_instance.list_all_account_logs p result rescue Freeclimb::ApiError =&gt; e puts &quot;Exception when calling DefaultApi-&gt;list_all_account_logs: #{e}&quot; end . Parameters . This endpoint does not need any parameter. . Return type . LogList . Authorization . fc . HTTP request headers . Content-Type: Not defined | Accept: application/json | . list_an_application . ApplicationList list_an_application(opts) . List applications . Example . # load the gem require &#39;freeclimb&#39; # setup authorization Freeclimb.configure do |config| # Configure HTTP basic authorization: fc config.username = &#39;ACCOUNT ID&#39; config.password = &#39;AUTH TOKEN&#39; end api_instance = Freeclimb::DefaultApi.new opts = { _alias: &#39;_alias_example&#39; # String | Return only applications with aliases that exactly match this value. } begin #List applications result = api_instance.list_an_application(opts) p result rescue Freeclimb::ApiError =&gt; e puts &quot;Exception when calling DefaultApi-&gt;list_an_application: #{e}&quot; end . Parameters . Name Type Description Notes . _alias | String | Return only applications with aliases that exactly match this value. | [optional] | . Return type . ApplicationList . Authorization . fc . HTTP request headers . Content-Type: Not defined | Accept: application/json | . list_available_numbers . AvailableNumberList list_available_numbers(opts) . List available numbers . Example . # load the gem require &#39;freeclimb&#39; # setup authorization Freeclimb.configure do |config| # Configure HTTP basic authorization: fc config.username = &#39;ACCOUNT ID&#39; config.password = &#39;AUTH TOKEN&#39; end api_instance = Freeclimb::DefaultApi.new opts = { _alias: &#39;_alias_example&#39;, # String | Filter on numbers based on the formatted string of the phone number. phone_number: &#39;phone_number_example&#39; # String | PCRE-compatible regular expression to filter against `phoneNumber` field, which is in E.164 format. } begin #List available numbers result = api_instance.list_available_numbers(opts) p result rescue Freeclimb::ApiError =&gt; e puts &quot;Exception when calling DefaultApi-&gt;list_available_numbers: #{e}&quot; end . Parameters . Name Type Description Notes . _alias | String | Filter on numbers based on the formatted string of the phone number. | [optional] | . phone_number | String | PCRE-compatible regular expression to filter against `phoneNumber` field, which is in E.164 format. | [optional] | . Return type . AvailableNumberList . Authorization . fc . HTTP request headers . Content-Type: Not defined | Accept: application/json | . list_call_logs . LogList list_call_logs(call_id) . List Call Logs . Example . # load the gem require &#39;freeclimb&#39; # setup authorization Freeclimb.configure do |config| # Configure HTTP basic authorization: fc config.username = &#39;ACCOUNT ID&#39; config.password = &#39;AUTH TOKEN&#39; end api_instance = Freeclimb::DefaultApi.new call_id = &#39;call_id_example&#39; # String | String that uniquely identifies this call resource. begin #List Call Logs result = api_instance.list_call_logs(call_id) p result rescue Freeclimb::ApiError =&gt; e puts &quot;Exception when calling DefaultApi-&gt;list_call_logs: #{e}&quot; end . Parameters . Name Type Description Notes . call_id | String | String that uniquely identifies this call resource. |   | . Return type . LogList . Authorization . fc . HTTP request headers . Content-Type: Not defined | Accept: application/json | . list_call_recordings . RecordingList list_call_recordings(call_id, opts) . List Call Recordings . Example . # load the gem require &#39;freeclimb&#39; # setup authorization Freeclimb.configure do |config| # Configure HTTP basic authorization: fc config.username = &#39;ACCOUNT ID&#39; config.password = &#39;AUTH TOKEN&#39; end api_instance = Freeclimb::DefaultApi.new call_id = &#39;call_id_example&#39; # String | String that uniquely identifies this call resource. opts = { date_created: &#39;date_created_example&#39; # String | Only show recordings created on the specified date, in the form *YYYY-MM-DD*. } begin #List Call Recordings result = api_instance.list_call_recordings(call_id, opts) p result rescue Freeclimb::ApiError =&gt; e puts &quot;Exception when calling DefaultApi-&gt;list_call_recordings: #{e}&quot; end . Parameters . Name Type Description Notes . call_id | String | String that uniquely identifies this call resource. |   | . date_created | String | Only show recordings created on the specified date, in the form YYYY-MM-DD. | [optional] | . Return type . RecordingList . Authorization . fc . HTTP request headers . Content-Type: Not defined | Accept: application/json | . list_calls . CallList list_calls(opts) . List Calls . Example . # load the gem require &#39;freeclimb&#39; # setup authorization Freeclimb.configure do |config| # Configure HTTP basic authorization: fc config.username = &#39;ACCOUNT ID&#39; config.password = &#39;AUTH TOKEN&#39; end api_instance = Freeclimb::DefaultApi.new opts = { to: &#39;to_example&#39;, # String | Only show Calls to this phone number. from: &#39;from_example&#39;, # String | Only show Calls from this phone number. status: &#39;status_example&#39;, # String | Only show Calls currently in this status. May be `queued`, `ringing`, `inProgress`, `canceled`, `completed`, `failed`, `busy`, or `noAnswer`. start_time: &#39;start_time_example&#39;, # String | Only show Calls that started at or after this time, given as YYYY-MM-DD hh:mm:ss. end_time: &#39;end_time_example&#39;, # String | Only show Calls that ended at or before this time, given as YYYY-MM- DD hh:mm:ss. parent_call_id: &#39;parent_call_id_example&#39; # String | Only show Calls spawned by the call with this ID. } begin #List Calls result = api_instance.list_calls(opts) p result rescue Freeclimb::ApiError =&gt; e puts &quot;Exception when calling DefaultApi-&gt;list_calls: #{e}&quot; end . Parameters . Name Type Description Notes . to | String | Only show Calls to this phone number. | [optional] | . from | String | Only show Calls from this phone number. | [optional] | . status | String | Only show Calls currently in this status. May be `queued`, `ringing`, `inProgress`, `canceled`, `completed`, `failed`, `busy`, or `noAnswer`. | [optional] | . start_time | String | Only show Calls that started at or after this time, given as YYYY-MM-DD hh:mm:ss. | [optional] | . end_time | String | Only show Calls that ended at or before this time, given as YYYY-MM- DD hh:mm:ss. | [optional] | . parent_call_id | String | Only show Calls spawned by the call with this ID. | [optional] | . Return type . CallList . Authorization . fc . HTTP request headers . Content-Type: Not defined | Accept: application/json | . list_conferences . ConferenceList list_conferences(opts) . List Conferences . Example . # load the gem require &#39;freeclimb&#39; # setup authorization Freeclimb.configure do |config| # Configure HTTP basic authorization: fc config.username = &#39;ACCOUNT ID&#39; config.password = &#39;AUTH TOKEN&#39; end api_instance = Freeclimb::DefaultApi.new opts = { status: &#39;status_example&#39;, # String | Only show conferences that currently have the specified status. Valid values: `empty`, `populated`, `inProgress`, or `terminated`. _alias: &#39;_alias_example&#39;, # String | List Conferences whose alias exactly matches this string. date_created: &#39;date_created_example&#39;, # String | Only show Conferences that were created on the specified date, in the form *YYYY-MM-DD*. date_updated: &#39;date_updated_example&#39; # String | Only show Conferences that were last updated on the specified date, in the form *YYYY-MM-DD*. } begin #List Conferences result = api_instance.list_conferences(opts) p result rescue Freeclimb::ApiError =&gt; e puts &quot;Exception when calling DefaultApi-&gt;list_conferences: #{e}&quot; end . Parameters . Name Type Description Notes . status | String | Only show conferences that currently have the specified status. Valid values: `empty`, `populated`, `inProgress`, or `terminated`. | [optional] | . _alias | String | List Conferences whose alias exactly matches this string. | [optional] | . date_created | String | Only show Conferences that were created on the specified date, in the form YYYY-MM-DD. | [optional] | . date_updated | String | Only show Conferences that were last updated on the specified date, in the form YYYY-MM-DD. | [optional] | . Return type . ConferenceList . Authorization . fc . HTTP request headers . Content-Type: Not defined | Accept: application/json | . list_incoming_numbers . IncomingNumberList list_incoming_numbers(opts) . List Incoming Numbers . Example . # load the gem require &#39;freeclimb&#39; # setup authorization Freeclimb.configure do |config| # Configure HTTP basic authorization: fc config.username = &#39;ACCOUNT ID&#39; config.password = &#39;AUTH TOKEN&#39; end api_instance = Freeclimb::DefaultApi.new opts = { phone_number: &#39;phone_number_example&#39;, # String | Only show incoming phone number resources that match this PCRE-compatible regular expression. _alias: &#39;_alias_example&#39; # String | Only show incoming phone numbers with aliases that exactly match this value. } begin #List Incoming Numbers result = api_instance.list_incoming_numbers(opts) p result rescue Freeclimb::ApiError =&gt; e puts &quot;Exception when calling DefaultApi-&gt;list_incoming_numbers: #{e}&quot; end . Parameters . Name Type Description Notes . phone_number | String | Only show incoming phone number resources that match this PCRE-compatible regular expression. | [optional] | . _alias | String | Only show incoming phone numbers with aliases that exactly match this value. | [optional] | . Return type . IncomingNumberList . Authorization . fc . HTTP request headers . Content-Type: Not defined | Accept: application/json | . list_members . QueueMemberList list_members(queue_id) . List Members . Example . # load the gem require &#39;freeclimb&#39; # setup authorization Freeclimb.configure do |config| # Configure HTTP basic authorization: fc config.username = &#39;ACCOUNT ID&#39; config.password = &#39;AUTH TOKEN&#39; end api_instance = Freeclimb::DefaultApi.new queue_id = &#39;queue_id_example&#39; # String | String that uniquely identifies the Queue that the Member belongs to. begin #List Members result = api_instance.list_members(queue_id) p result rescue Freeclimb::ApiError =&gt; e puts &quot;Exception when calling DefaultApi-&gt;list_members: #{e}&quot; end . Parameters . Name Type Description Notes . queue_id | String | String that uniquely identifies the Queue that the Member belongs to. |   | . Return type . QueueMemberList . Authorization . fc . HTTP request headers . Content-Type: Not defined | Accept: application/json | . list_participants . ConferenceParticipantList list_participants(conference_id, opts) . List Participants . Example . # load the gem require &#39;freeclimb&#39; # setup authorization Freeclimb.configure do |config| # Configure HTTP basic authorization: fc config.username = &#39;ACCOUNT ID&#39; config.password = &#39;AUTH TOKEN&#39; end api_instance = Freeclimb::DefaultApi.new conference_id = &#39;conference_id_example&#39; # String | ID of the conference this participant is in. opts = { talk: true, # Boolean | Only show Participants with the talk privilege. listen: true # Boolean | Only show Participants with the listen privilege. } begin #List Participants result = api_instance.list_participants(conference_id, opts) p result rescue Freeclimb::ApiError =&gt; e puts &quot;Exception when calling DefaultApi-&gt;list_participants: #{e}&quot; end . Parameters . Name Type Description Notes . conference_id | String | ID of the conference this participant is in. |   | . talk | Boolean | Only show Participants with the talk privilege. | [optional] | . listen | Boolean | Only show Participants with the listen privilege. | [optional] | . Return type . ConferenceParticipantList . Authorization . fc . HTTP request headers . Content-Type: Not defined | Accept: application/json | . list_recordings . RecordingList list_recordings(opts) . List Recordings . Example . # load the gem require &#39;freeclimb&#39; # setup authorization Freeclimb.configure do |config| # Configure HTTP basic authorization: fc config.username = &#39;ACCOUNT ID&#39; config.password = &#39;AUTH TOKEN&#39; end api_instance = Freeclimb::DefaultApi.new opts = { call_id: &#39;call_id_example&#39;, # String | Show only Recordings made during the Call with this ID. conference_id: &#39;conference_id_example&#39;, # String | Show only Recordings made during the conference with this ID. date_created: &#39;date_created_example&#39; # String | Only show Recordings created on this date, formatted as *YYYY-MM-DD*. } begin #List Recordings result = api_instance.list_recordings(opts) p result rescue Freeclimb::ApiError =&gt; e puts &quot;Exception when calling DefaultApi-&gt;list_recordings: #{e}&quot; end . Parameters . Name Type Description Notes . call_id | String | Show only Recordings made during the Call with this ID. | [optional] | . conference_id | String | Show only Recordings made during the conference with this ID. | [optional] | . date_created | String | Only show Recordings created on this date, formatted as YYYY-MM-DD. | [optional] | . Return type . RecordingList . Authorization . fc . HTTP request headers . Content-Type: Not defined | Accept: application/json | . list_sms_messages . MessagesList list_sms_messages(opts) . List SMS Messages . Example . # load the gem require &#39;freeclimb&#39; # setup authorization Freeclimb.configure do |config| # Configure HTTP basic authorization: fc config.username = &#39;ACCOUNT ID&#39; config.password = &#39;AUTH TOKEN&#39; end api_instance = Freeclimb::DefaultApi.new opts = { to: &#39;to_example&#39;, # String | Only show Messages to this phone number. from: &#39;from_example&#39;, # String | Only show Messages from this phone number. begin_time: &#39;begin_time_example&#39;, # String | Only show Messages sent at or after this time (GMT), given as *YYYY-MM-DD hh:mm:ss*. end_time: &#39;end_time_example&#39;, # String | Only show messages sent at or before this time (GMT), given as *YYYY-MM-DD hh:mm*.. direction: &#39;direction_example&#39;, # String | Either `inbound` or `outbound`. Only show Messages that were either *sent from* or *received by* FreeClimb. account_id: &#39;account_id_example&#39; # String | String that uniquely identifies this account resource. } begin #List SMS Messages result = api_instance.list_sms_messages(opts) p result rescue Freeclimb::ApiError =&gt; e puts &quot;Exception when calling DefaultApi-&gt;list_sms_messages: #{e}&quot; end . Parameters . Name Type Description Notes . to | String | Only show Messages to this phone number. | [optional] | . from | String | Only show Messages from this phone number. | [optional] | . begin_time | String | Only show Messages sent at or after this time (GMT), given as YYYY-MM-DD hh:mm:ss. | [optional] | . end_time | String | Only show messages sent at or before this time (GMT), given as YYYY-MM-DD hh:mm.. | [optional] | . direction | String | Either `inbound` or `outbound`. Only show Messages that were either sent from or received by FreeClimb. | [optional] | . account_id | String | String that uniquely identifies this account resource. | [optional] | . Return type . MessagesList . Authorization . fc . HTTP request headers . Content-Type: Not defined | Accept: application/json | . make_a_call . CallResult make_a_call(opts) . Make a Call . Example . # load the gem require &#39;freeclimb&#39; # setup authorization Freeclimb.configure do |config| # Configure HTTP basic authorization: fc config.username = &#39;ACCOUNT ID&#39; config.password = &#39;AUTH TOKEN&#39; end api_instance = Freeclimb::DefaultApi.new opts = { make_call_request: Freeclimb::MakeCallRequest.new # MakeCallRequest | Call details for making a call } begin #Make a Call result = api_instance.make_a_call(opts) p result rescue Freeclimb::ApiError =&gt; e puts &quot;Exception when calling DefaultApi-&gt;make_a_call: #{e}&quot; end . Parameters . Name Type Description Notes . make_call_request | MakeCallRequest | Call details for making a call | [optional] | . Return type . CallResult . Authorization . fc . HTTP request headers . Content-Type: application/json | Accept: application/json | . remove_a_participant . remove_a_participant(conference_id, call_id) . Remove a Participant . Example . # load the gem require &#39;freeclimb&#39; # setup authorization Freeclimb.configure do |config| # Configure HTTP basic authorization: fc config.username = &#39;ACCOUNT ID&#39; config.password = &#39;AUTH TOKEN&#39; end api_instance = Freeclimb::DefaultApi.new conference_id = &#39;conference_id_example&#39; # String | ID of the conference this participant is in. call_id = &#39;call_id_example&#39; # String | ID of the Call associated with this participant. begin #Remove a Participant api_instance.remove_a_participant(conference_id, call_id) rescue Freeclimb::ApiError =&gt; e puts &quot;Exception when calling DefaultApi-&gt;remove_a_participant: #{e}&quot; end . Parameters . Name Type Description Notes . conference_id | String | ID of the conference this participant is in. |   | . call_id | String | ID of the Call associated with this participant. |   | . Return type . nil (empty response body) . Authorization . fc . HTTP request headers . Content-Type: Not defined | Accept: Not defined | . send_an_sms_message . MessageResult send_an_sms_message(opts) . Send an SMS Message . Example . # load the gem require &#39;freeclimb&#39; # setup authorization Freeclimb.configure do |config| # Configure HTTP basic authorization: fc config.username = &#39;ACCOUNT ID&#39; config.password = &#39;AUTH TOKEN&#39; end api_instance = Freeclimb::DefaultApi.new opts = { message_request: Freeclimb::MessageRequest.new # MessageRequest | Details to create a message } begin #Send an SMS Message result = api_instance.send_an_sms_message(opts) p result rescue Freeclimb::ApiError =&gt; e puts &quot;Exception when calling DefaultApi-&gt;send_an_sms_message: #{e}&quot; end . Parameters . Name Type Description Notes . message_request | MessageRequest | Details to create a message | [optional] | . Return type . MessageResult . Authorization . fc . HTTP request headers . Content-Type: application/json | Accept: application/json | . stream_a_recording_file . File stream_a_recording_file(recording_id) . Stream a Recording File . Example . # load the gem require &#39;freeclimb&#39; # setup authorization Freeclimb.configure do |config| # Configure HTTP basic authorization: fc config.username = &#39;ACCOUNT ID&#39; config.password = &#39;AUTH TOKEN&#39; end api_instance = Freeclimb::DefaultApi.new recording_id = &#39;recording_id_example&#39; # String | String that uniquely identifies this recording resource. begin #Stream a Recording File result = api_instance.stream_a_recording_file(recording_id) p result rescue Freeclimb::ApiError =&gt; e puts &quot;Exception when calling DefaultApi-&gt;stream_a_recording_file: #{e}&quot; end . Parameters . Name Type Description Notes . recording_id | String | String that uniquely identifies this recording resource. |   | . Return type . File . Authorization . fc . HTTP request headers . Content-Type: Not defined | Accept: audio/x-wav | . update_a_conference . ConferenceResult update_a_conference(conference_id, opts) . Update a Conference . Example . # load the gem require &#39;freeclimb&#39; # setup authorization Freeclimb.configure do |config| # Configure HTTP basic authorization: fc config.username = &#39;ACCOUNT ID&#39; config.password = &#39;AUTH TOKEN&#39; end api_instance = Freeclimb::DefaultApi.new conference_id = &#39;conference_id_example&#39; # String | String that uniquely identifies this conference resource. opts = { update_conference_request: Freeclimb::UpdateConferenceRequest.new # UpdateConferenceRequest | Conference Details to update } begin #Update a Conference result = api_instance.update_a_conference(conference_id, opts) p result rescue Freeclimb::ApiError =&gt; e puts &quot;Exception when calling DefaultApi-&gt;update_a_conference: #{e}&quot; end . Parameters . Name Type Description Notes . conference_id | String | String that uniquely identifies this conference resource. |   | . update_conference_request | UpdateConferenceRequest | Conference Details to update | [optional] | . Return type . ConferenceResult . Authorization . fc . HTTP request headers . Content-Type: application/json | Accept: application/json | . update_a_live_call . update_a_live_call(call_id, opts) . Update a Live Call . Example . # load the gem require &#39;freeclimb&#39; # setup authorization Freeclimb.configure do |config| # Configure HTTP basic authorization: fc config.username = &#39;ACCOUNT ID&#39; config.password = &#39;AUTH TOKEN&#39; end api_instance = Freeclimb::DefaultApi.new call_id = &#39;call_id_example&#39; # String | String that uniquely identifies this call resource. opts = { update_call_request: Freeclimb::UpdateCallRequest.new # UpdateCallRequest | Call details to update } begin #Update a Live Call api_instance.update_a_live_call(call_id, opts) rescue Freeclimb::ApiError =&gt; e puts &quot;Exception when calling DefaultApi-&gt;update_a_live_call: #{e}&quot; end . Parameters . Name Type Description Notes . call_id | String | String that uniquely identifies this call resource. |   | . update_call_request | UpdateCallRequest | Call details to update | [optional] | . Return type . nil (empty response body) . Authorization . fc . HTTP request headers . Content-Type: application/json | Accept: Not defined | . update_a_participant . ConferenceParticipantResult update_a_participant(conference_id, call_id, opts) . Update a Participant . Example . # load the gem require &#39;freeclimb&#39; # setup authorization Freeclimb.configure do |config| # Configure HTTP basic authorization: fc config.username = &#39;ACCOUNT ID&#39; config.password = &#39;AUTH TOKEN&#39; end api_instance = Freeclimb::DefaultApi.new conference_id = &#39;conference_id_example&#39; # String | ID of the conference this participant is in. call_id = &#39;call_id_example&#39; # String | ID of the Call associated with this participant. opts = { update_conference_participant_request: Freeclimb::UpdateConferenceParticipantRequest.new # UpdateConferenceParticipantRequest | Conference participant details to update } begin #Update a Participant result = api_instance.update_a_participant(conference_id, call_id, opts) p result rescue Freeclimb::ApiError =&gt; e puts &quot;Exception when calling DefaultApi-&gt;update_a_participant: #{e}&quot; end . Parameters . Name Type Description Notes . conference_id | String | ID of the conference this participant is in. |   | . call_id | String | ID of the Call associated with this participant. |   | . update_conference_participant_request | UpdateConferenceParticipantRequest | Conference participant details to update | [optional] | . Return type . ConferenceParticipantResult . Authorization . fc . HTTP request headers . Content-Type: application/json | Accept: application/json | . update_a_queue . QueueResult update_a_queue(queue_id, opts) . Update a Queue . Example . # load the gem require &#39;freeclimb&#39; # setup authorization Freeclimb.configure do |config| # Configure HTTP basic authorization: fc config.username = &#39;ACCOUNT ID&#39; config.password = &#39;AUTH TOKEN&#39; end api_instance = Freeclimb::DefaultApi.new queue_id = &#39;queue_id_example&#39; # String | A string that uniquely identifies this Queue resource. opts = { queue_request: Freeclimb::QueueRequest.new # QueueRequest | Queue Details to update } begin #Update a Queue result = api_instance.update_a_queue(queue_id, opts) p result rescue Freeclimb::ApiError =&gt; e puts &quot;Exception when calling DefaultApi-&gt;update_a_queue: #{e}&quot; end . Parameters . Name Type Description Notes . queue_id | String | A string that uniquely identifies this Queue resource. |   | . queue_request | QueueRequest | Queue Details to update | [optional] | . Return type . QueueResult . Authorization . fc . HTTP request headers . Content-Type: application/json | Accept: application/json | . update_an_account . update_an_account(opts) . Manage an account . Example . # load the gem require &#39;freeclimb&#39; # setup authorization Freeclimb.configure do |config| # Configure HTTP basic authorization: fc config.username = &#39;ACCOUNT ID&#39; config.password = &#39;AUTH TOKEN&#39; end api_instance = Freeclimb::DefaultApi.new opts = { account_request: Freeclimb::AccountRequest.new # AccountRequest | Account details to update } begin #Manage an account api_instance.update_an_account(opts) rescue Freeclimb::ApiError =&gt; e puts &quot;Exception when calling DefaultApi-&gt;update_an_account: #{e}&quot; end . Parameters . Name Type Description Notes . account_request | AccountRequest | Account details to update | [optional] | . Return type . nil (empty response body) . Authorization . fc . HTTP request headers . Content-Type: application/json | Accept: Not defined | . update_an_application . ApplicationResult update_an_application(application_id, opts) . Update an application . Example . # load the gem require &#39;freeclimb&#39; # setup authorization Freeclimb.configure do |config| # Configure HTTP basic authorization: fc config.username = &#39;ACCOUNT ID&#39; config.password = &#39;AUTH TOKEN&#39; end api_instance = Freeclimb::DefaultApi.new application_id = &#39;application_id_example&#39; # String | A string that uniquely identifies this application resource. opts = { application_request: Freeclimb::ApplicationRequest.new # ApplicationRequest | Application details to update. } begin #Update an application result = api_instance.update_an_application(application_id, opts) p result rescue Freeclimb::ApiError =&gt; e puts &quot;Exception when calling DefaultApi-&gt;update_an_application: #{e}&quot; end . Parameters . Name Type Description Notes . application_id | String | A string that uniquely identifies this application resource. |   | . application_request | ApplicationRequest | Application details to update. | [optional] | . Return type . ApplicationResult . Authorization . fc . HTTP request headers . Content-Type: application/json | Accept: application/json | . update_an_incoming_number . IncomingNumberResult update_an_incoming_number(phone_number_id, opts) . Update an Incoming Number . Example . # load the gem require &#39;freeclimb&#39; # setup authorization Freeclimb.configure do |config| # Configure HTTP basic authorization: fc config.username = &#39;ACCOUNT ID&#39; config.password = &#39;AUTH TOKEN&#39; end api_instance = Freeclimb::DefaultApi.new phone_number_id = &#39;phone_number_id_example&#39; # String | String that uniquely identifies this phone number resource. opts = { incoming_number_request: Freeclimb::IncomingNumberRequest.new # IncomingNumberRequest | Incoming Number details to update } begin #Update an Incoming Number result = api_instance.update_an_incoming_number(phone_number_id, opts) p result rescue Freeclimb::ApiError =&gt; e puts &quot;Exception when calling DefaultApi-&gt;update_an_incoming_number: #{e}&quot; end . Parameters . Name Type Description Notes . phone_number_id | String | String that uniquely identifies this phone number resource. |   | . incoming_number_request | IncomingNumberRequest | Incoming Number details to update | [optional] | . Return type . IncomingNumberResult . Authorization . fc . HTTP request headers . Content-Type: application/json | Accept: application/json | .",
    "url": "http://localhost:4000/rubydocs/docs/DefaultApi.html",
    "relUrl": "/docs/DefaultApi.html"
  }
  ,"62": {
    "title": "Percl",
    "content": "Percl . The Performance Command Language (PerCL) defines a set of instructions, written in JSON format, that express telephony actions to be performed in response to an event on the FreeClimb platform. FreeClimb communicates with the application server when events associated with the application occur, so the webserver can instruct FreeClimb how to handle such events using PerCL scripts. . When creating a Percl object, required parameters must be used in the constructer while optional parameters must be set direclty on the given Percl object. Example: . digits = &#39;630&#39; send_digits = Percl::SendDigits.new(digits) send_digits.pauseMs = &#39;500&#39; . Documentation for PerCL Responses . Class | Description ———— | ————- Percl::OutDial | The OutDial command is used to call a phone number Percl::Hangup | The Hangup command terminates a Call Percl::Pause | The Pause command halts execution of the current PerCL script for a specified number of millisecond Percl::Redirect | The Redirect command transfers control of a Call to the PerCL at a different URL Percl::SendDigits | The SendDigits command plays DTMF tones on a live Call. This is useful for navigating through IVR menus or dialing extensions Percl::Reject | The Reject command blocks an incoming Call. Percl::CreateConference | The CreateConference command does exactly what its name implies — it creates an unpopulated Conference (one without any Participants). Percl::TerminateConference | The TerminateConference command terminates an existing Conference. Percl::AddToConference | The AddToConference command adds a Participant to a Conference. Percl::RemoveFromConference | The RemoveFromConference command removes a Participant from a Conference but does not hang up. Percl::SetListen | The SetListen command enables or disables the listen privilege for a Conference Participant provided both calls are in the same conference. Percl::SetTalk | The SetTalk command enables or disables the talk privilege for a Participant in a Conference provided both calls are in the same conference. Percl::Enqueue | The Enqueue command adds the current Call to a call Queue. Percl::Dequeue | The Dequeue command transfers control of a Call that is in a Queue so that the waiting caller exits the Queue. Percl::RecordUtterance | The RecordUtterance command records the caller’s voice and returns the URL of a file containing the audio recording. Percl::StartRecordCall | The StartRecordCall command records the current call and returns the URL of a file containing the audio recording when recording completes. Percl::PlayEarlyMedia | The PlayEarlyMedia command plays A media file before attempting to connect a call Percl::Play | the Play command plays an audio file back to the caller. Percl::Say | The Say command provides Text-To-Speech (TTS) support. It converts text to speech and then renders it in a female voice back to the caller. Percl::GetDigits | The GetDigits command collects DTMF inputs from the caller. Percl::GetSpeech | The GetSpeech command enables the Caller to respond to the application using a supported language. Percl::Sms | The Sms command can be used to send an SMS message to a phone number during a phone call. . Percl::OutDial . The OutDial command is used to call a phone number . Example . # load the gems require &#39;sinatra&#39; require &#39;freeclimb&#39; require &#39;json&#39; post &#39;/voice&#39; do out_dial = Percl::OutDial.new(&#39;MOCK_ACTION_URL&#39;, &#39;MOCK_CALL_CONNECT_URL&#39;, &#39;MOCK_CALLING_NUMBER&#39;, &#39;MOCK_DESTINATION&#39;) script = Percl::Script.new script.add(out_dial) script.to_json end . Parameters . Name | Type | Description | Notes ————- | ————- | ————- | ————- actionUrl | String| URL to which FreeClimb sends an HTTP POST request. callConnectUrl | String| URL to which FreeClimb makes an HTTP POST request informing the result of the OutDial. callingNumber | String | The caller ID to show to the called party when FreeClimb calls. This can be one of the following: The To or From number provided in the first Webhook to your webserver. Any phone number you have purchased from FreeClimb. destination | String | E.164 representation of the phone number to Call. ifMachine | String | Specifies how FreeClimb should handle this OutDial if an answering machine answers the Call. Valid values: redirect invokes the ifMachineUrl for instructions. hangup hangs up the Call. The ifMachineUrl will not be invoked. | [optional] ifMachineUrl | String | When the ifMachine flag is set to redirect, this attribute specifies a URL to which FreeClimb makes a POST request when an answering machine or a fax machine is detected. This URL is required if the ifMachine flag is set to redirect. Otherwise, it should not be included. | [required if ifMachine is set to redirect] sendDigits | String | DTMF tones to play to the outdialed Call. This is typically used to dial a number and then dial an extension. | [optional] statusCallBackUrl | String | When the outdialed Call leg terminates, FreeClimb sends a callStatus Webhook to the statusCallbackUrl. This is a notification only; any PerCL command returned is ignored. | [optional] timeout | String | Maximum time in seconds the OutDial command waits for the called party to answer the Call. When a timeout occurs, FreeClimb invokes the callConnectUrl Webhook to report that the out-dialed Call has ended with a status of noAnswer. | [optional] . Percl::Hangup . The Hangup command terminates a Call . Example . # load the gems require &#39;sinatra&#39; require &#39;freeclimb&#39; require &#39;json&#39; post &#39;/voice&#39; do hangup = Percl::Hangup.new script = Percl::Script.new script.add(out_dial) script.to_json end . Parameters . Name | Type | Description | Notes ————- | ————- | ————- | ————- callId | String | The ID of the Call leg to hang up. If not specified, the Call leg corresponding to the current PerCL execution context hangs up. | [optional] reason | String | The user defined reason for the hangup. In general, applications should use a set of enumerated values that are predefined to cover all exit points of the Call flows for the given application. | [optional] . Percl::Pause . The Pause command halts execution of the current PerCL script for a specified number of milliseconds. If Pause is the first command in a PerCL document, FreeClimb will wait for the specified time to elapse before picking up the call. . Example . # load the gems require &#39;sinatra&#39; require &#39;freeclimb&#39; require &#39;json&#39; post &#39;/voice&#39; do pause = Percl::Pause.new(2000) script = Percl::Script.new script.add(out_dial) script.to_json end . Parameters . Name | Type | Description | Notes ————- | ————- | ————- | ————- length | Integer | Length in milliseconds. FreeClimb will wait silently before continuing on. . Percl::Redirect . The Redirect command transfers control of a Call to the PerCL at a different URL. Redirect is a terminal command, so any actions following it are never executed. . Example . # load the gems require &#39;sinatra&#39; require &#39;freeclimb&#39; require &#39;json&#39; post &#39;/voice&#39; do redirect = Percl::Redirect.new(&#39;MOCK_REDIRECT_URL&#39;) script = Percl::Script.new script.add(redirect) script.to_json end . Parameters . Name | Type | Description | Notes ————- | ————- | ————- | ————- actionUrl | String | URL to request a new PerCL script to continue with the current Call’s processing. When Redirect invokes the actionUrl, an inbound Webhook is sent. . Percl::SendDigits . The SendDigits command plays DTMF tones on a live Call. This is useful for navigating through IVR menus or dialing extensions. . Example . # load the gems require &#39;sinatra&#39; require &#39;freeclimb&#39; require &#39;json&#39; post &#39;/voice&#39; do send = Percl::SendDigits.new(&#39;12367#&#39;) script = Percl::Script.new script.add(send) script.to_json end . Parameters . Name Type Description Notes . digits | String | String containing the digits to be played. The string cannot be empty and can include any digit, plus #, or *, and allows embedding specification for delay or pause between the output of individual digits. |   | . pauseMs | Integer | Pause between digits in milliseconds. Valid values are 100-1000 milliseconds and will be adjusted by FreeClimb to satisfy the constraint. | [optional] | . Percl::Reject . The Reject command blocks an incoming Call. Using Reject is the only way to prevent FreeClimb from answering a Call. Any other response will result in an answered Call and your account will be billed. . Example . # load the gems require &#39;sinatra&#39; require &#39;freeclimb&#39; require &#39;json&#39; post &#39;/voice&#39; do reject = Percl::Reject.new script = Percl::Script.new script.add(reject) script.to_json end . Parameters . Name Type Description Notes . reason | String | Reason for the rejection. This can be any string value. In general, applications should use a set of enumerated values that are predefined to cover all exit points of the call flows for the given application. | [optional] | . Percl::CreateConference . The CreateConference command does exactly what its name implies — it creates an unpopulated Conference (one without any Participants). Once created, a Conference remains in FreeClimb until explicitly terminated by a customer. Once a Conference has been terminated, it can no longer be used. . Example . # load the gems require &#39;sinatra&#39; require &#39;freeclimb&#39; require &#39;json&#39; post &#39;/voice&#39; do create_conference = Percl::CreateConference.new(&#39;MOCK_ACTION_URL&#39;) script = Percl::Script.new script.add(create_conference) script.to_json end . Parameters . Name Type Description Notes . actionUrl | String | This URL is invoked once the Conference is successfully created. Actions on the Conference, such as adding Participants, can be performed via the PerCL script returned in the response. |   | . alias | String | Descriptive name for the Conference. | [optional] | . playBeep | String | Indicates whether to play a beep when a Participant enters or leaves the Conference. either always, never, entryOnly, or exitOnly. Leaving this unset will make conference default to always | [optional] | . record | String | When set to true, the entire Conference is recorded. The statusCallbackUrl of the Conference will receive a conferenceRecordingEnded Webhook when the Conference transitions from the inProgress to empty state. | [optional] | . waitUrl | String | If specified, this URL provides the custom hold music for the Conference when it is in the populated state. This attribute is always fetched using HTTP GET and is fetched just once – when the Conference is created. The URL must be an audio file that is reachable and readable by FreeClimb. | [optional] | . statusCallbackUrl | String | This URL is invoked when the status of the Conference changes or when a recording of the Conference has become available. | [optional] | . Percl::TerminateConference . The TerminateConference command terminates an existing Conference. Any active participants are hung up on by FreeClimb. If this is not the desired behavior, use the RemoveFromConference command to unbridge Calls that should not be hung up. . Note: The Call requesting TerminateConference must be on the same Conference for this command to execute. . Example . # load the gems require &#39;sinatra&#39; require &#39;freeclimb&#39; require &#39;json&#39; post &#39;/voice&#39; do terminate = Percl::TerminateConference.new(&#39;MOCK_CONFERENCE_ID&#39;) script = Percl::Script.new script.add(terminate) script.to_json end . Parameters . Name Type Description Notes . conferenceId | String | ID of the conference to terminate. |   | . Percl::AddToConference . The AddToConference command adds a Participant to a Conference. If this Participant currently is in another Conference, the Participant is first removed from that Conference. Two Call legs can be bridged together by creating a Conference and adding both Call legs to it via AddToConference. . Example . # load the gems require &#39;sinatra&#39; require &#39;freeclimb&#39; require &#39;json&#39; post &#39;/voice&#39; do # Assuming Conference is already created add = Percl::AddToConference.new(&#39;MOCK_CONF_ID&#39;, &#39;MOCK_CALL_ID&#39;) script = Percl::Script.new script.add(add) script.to_json end . Parameters . Name Type Description Notes . conferenceId | String | ID of the Conference to which to add the Participant (Call leg). Conference must exist or an error will result. |   | . callId | String | ID of the Call that will be added to the specified Conference. The Call must be in progress or an error will result. If the Call is part of an existing Conference, it is first removed from that Conference and is then moved to the new one. |   | . startConfOnEnter | Boolean | Flag that indicates whether a Conference starts upon entry of this particular Participant. This is usually set to true for moderators and false for all other Participants. | [optional] | . talk | Boolean | If true, the Participant joins the Conference with talk privileges. This may be modified later via the REST API or SetTalk PerCL command. | [optional] | . listen | Boolean | If true, the Participant joins the Conference with listen privileges. This may be modified later via the REST API or SetListen PerCL command. | [optional] | . allowCallControl | Boolean | If true, Call control will be enabled for this Participant’s Call leg. | [optional] | . callControlSequence | String | Defines a sequence of digits that, when entered by this caller, invokes the callControlUrl. Only digits plus ‘*’, and ‘#’ may be used. | [required if allowCallControl is true] | . callControlUrl | String | URL to be invoked when this Participant enters the digit sequence defined in the callControlSequence attribute. | [required if allowCallControl is true] | . leaveConferenceUrl | String | URL to be invoked when the Participant leaves the Conference. | [optional] | . notificationUrl | String | When the Participant enters the Conference, this URL will be invoked using an HTTP POST request with the standard request parameters. | [optional] | . Percl::RemoveFromConference . The RemoveFromConference command removes a Participant from a Conference but does not hang up. Instead, the Call is simply unbridged and what happens next with the Call is determined by the PerCL returned in response to the leaveConferenceUrl attribute. . Example . # load the gems require &#39;sinatra&#39; require &#39;freeclimb&#39; require &#39;json&#39; post &#39;/voice&#39; do # Assuming Conference is already created and participant is in conference remove = Percl::RemoveFromConference.new(&#39;MOCK_CALL_ID&#39;) script = Percl::Script.new script.add(remove) script.to_json end . Parameters . Name | Type | Description | Notes ————- | ————- | ————- | ————- callId | String | ID of the Call leg to be removed from the Conference. The Call must be in a Conference or an error will be triggered. . Percl::SetListen . The SetListen command enables or disables the listen privilege for a Conference Participant provided both calls are in the same conference. The Participant can hear what the other participants are saying only if this privilege is enabled. . Example . # load the gems require &#39;sinatra&#39; require &#39;freeclimb&#39; require &#39;json&#39; post &#39;/voice&#39; do # Assuming Conference is already created and participant is in conference listen = Percl::SetListen.new(&#39;MOCK_CALL_ID&#39;) script = Percl::Script.new script.add(listen) script.to_json end . Parameters . Name | Type | Description | Notes ————- | ————- | ————- | ————- callId | String | ID of the call leg that is to be assigned the listen privilege. The Call must be in a Conference or an error will be triggered. listen | Boolean | Specifying false will silence the Conference for this Participant. | [optional] . Percl::SetTalk . The SetTalk command enables or disables the talk privilege for a Participant in a Conference provided both calls are in the same conference. If ‘true’, no audio from that Participant is shared with the other Participants of the Conference. . Example . # load the gems require &#39;sinatra&#39; require &#39;freeclimb&#39; require &#39;json&#39; post &#39;/voice&#39; do # Assuming Conference is already created and participant is in conference talk = Percl::SetTalk.new(&#39;MOCK_CALL_ID&#39;) script = Percl::Script.new script.add(talk) script.to_json end . Parameters . Name | Type | Description | Notes ————- | ————- | ————- | ————- callId | String | ID of the call leg that is to be muted or unmuted. The Call must be in a Conference or an error will be triggered. talk | Boolean | Specifying false mutes the Participant. | [optional] . Percl::Enqueue . The Enqueue command adds the current Call to a call Queue. If the specified Queue does not exist, it is created and then the Call is added to it. The default maximum length of the queue is 100. This can be modified using the REST API. . Example . # load the gems require &#39;sinatra&#39; require &#39;freeclimb&#39; require &#39;json&#39; post &#39;/voice&#39; do # Assuming Queue is already created enqueue = Percl::Enqueue.new(&#39;MOCK_QUEUE_ID&#39;, &#39;MOCK_WAIT_URL&#39;, &#39;MOCK_ACTION_URL&#39;) script = Percl::Script.new script.add(enqueue) script.to_json end . Parameters . Name Type Description Notes . queueId | String | ID of the Queue to which to add the Call. If the Queue does not exist, it will be created. The ID must start with QU followed by 40 hex characters. |   | . waitUrl | String | Specifies a URL pointing to a PerCL script containing actions to be executed while the caller is waiting in the Queue. Once the script returned by the waitUrl runs out of commands to execute, FreeClimb will re-request the waitUrl and start over, essentially looping the script indefinitely. |   | . actionUrl | String | A request is made to this URL when the Call leaves the Queue, which can occur if enqueue of the Call fails or when the call is dequeued via the Dequeue command, the REST API (POST to Queue Member resource), or the caller hangs up. |   | . notificationUrl | String | URL to be invoked when the call enters the queue. The request to the URL contains the standard request parameters.This is a notification only; any PerCL returned will be ignored. | [optional] | . Percl::Dequeue . The Dequeue command transfers control of a Call that is in a Queue so that the waiting caller exits the Queue. Execution continues with the first command in the PerCL script returned by the actionUrl specified in the Enqueue command. . Example . # load the gems require &#39;sinatra&#39; require &#39;freeclimb&#39; require &#39;json&#39; post &#39;/voice&#39; do # Assuming call is in queue dequeue = Percl::Dequeue.new script = Percl::Script.new script.add(dequeue) script.to_json end . Parameters . none . Percl::RecordUtterance . The RecordUtterance command records the caller’s voice and returns the URL of a file containing the audio recording. . RecordUtterance is blocking and is a terminal command. As such, the actionUrl property is required, and control of the Call picks up using the PerCL returned in response to the actionUrl. Recording information is returned in the actionUrl request. . Example . # load the gems require &#39;sinatra&#39; require &#39;freeclimb&#39; require &#39;json&#39; post &#39;/voice&#39; do record = Percl::RecordUtterance.new(&#39;MOCK_ACTION_URL&#39;) script = Percl::Script.new script.add(record) script.to_json end . Parameters . Name Type Description Notes . actionUrl | String | URL to which information on the completed recording is submitted. The PerCL received in response is then used to continue with Call processing. |   | . silenceTimeoutMs | Integer | Interval of silence that should elapse before ending the recording. | [optional] | . finishOnKey | String | Key that triggers the end of the recording. any digit, ‘#’, or ‘*’ | [optional] | . maxLengthSec | Integer | Maximum length for the command execution in seconds. | [optional] | . playBeep | Boolean | Indicates whether to play a beep sound before the start of the recording. If set to false, no beep is played. | [optional] | . autoStart | Boolean | If false, recording begins immediately after the RecordUtterance command is processed. If true, recording begins when audio is present and if audio begins before the maxLengthSec timeout. If no audio begins before maxLengthSec, no recording is generated. | [optional] | . Percl::StartRecordCall . The StartRecordCall command records the current call and returns the URL of a file containing the audio recording when recording completes. . StartRecordCall is non-blocking. After recording of the current call begins, control of the call moves to the PerCL command that follows StartRecordCall in the current PerCL script. . Example . # load the gems require &#39;sinatra&#39; require &#39;freeclimb&#39; require &#39;json&#39; post &#39;/voice&#39; do record = Percl::StartRecordCall.new script = Percl::Script.new script.add(record) script.to_json end . Parameters . none . Percl::PlayEarlyMedia . PlayEarlyMedia is relevant only when present as the very first command in the PerCL script returned for an incoming Call. In such cases, the command is executed before FreeClimb attempts to connect the call. The audio file it uses can be stored in any location that is accessible via URL. . Example . # load the gems require &#39;sinatra&#39; require &#39;freeclimb&#39; require &#39;json&#39; post &#39;/voice&#39; do media = Percl::PlayEarlyMedia.new(&#39;MOCK_FILE_URL&#39;) script = Percl::Script.new script.add(media) script.to_json end . Parameters . Name | Type | Description | Notes ————- | ————- | ————- | ————- file | String | URL of the audio file to be played to the caller. The URL can be the recordingUrl generated from the RecordUtterance or StartRecordCall PerCL commands or any accessible URL. FreeClimb will respect Cache-Control headers for this file. Use these to limit repeated requests for unchanged audio. If no Cache-Control header is provided, the file will be cached for seven days by default. . Percl::Play . The Play command plays an audio file back to the caller. The audio file may be located at any location accessible via a URL. Play can exist as a stand-alone command or as a nested command. It does not allow barge-in unless nested within a GetSpeech command. The file will always be played to completion unless nested. . Example . # load the gems require &#39;sinatra&#39; require &#39;freeclimb&#39; require &#39;json&#39; post &#39;/voice&#39; do play = Percl::Play.new(&#39;MOCK_FILE_URL&#39;) script = Percl::Script.new script.add(play) script.to_json end . Parameters . Name | Type | Description | Notes ————- | ————- | ————- | ————- file | String | URL of the audio file to be played to the caller. The URL can be the recordingUrl generated from the RecordUtterance or StartRecordCall PerCL commands. loop | Integer | Number of times the audio file is played. Specifying ‘0’ causes the Play action to loop until the Call is hung up. | [optional] conferenceId | String | ID of the Conference the audio should be rendered to. If this is not specified, the audio is by default rendered to the caller associated with the call leg that corresponds to the current PerCL execution context. The call leg associated with this command must be in the specified Conference or the command will return an error. | [optional] . Percl::Say . The Say command provides Text-To-Speech (TTS) support. It converts text to speech and then renders it in a female voice back to the caller. Say is useful in cases where it’s difficult to pre-record a prompt for any reason. Say does not allow barge-in unless nested within a GetSpeech command. The file will always be played to completion unless nested. . When translating text to speech, the Say action will make assumptions about how to pronounce numbers, dates, times, amounts of money and other abbreviations. . Example . # load the gems require &#39;sinatra&#39; require &#39;freeclimb&#39; require &#39;json&#39; post &#39;/voice&#39; do say = Percl::Say.new(&#39;Hello, World!&#39;) script = Percl::Script.new script.add(say) script.to_json end . Parameters . Name | Type | Description | Notes ————- | ————- | ————- | ————- text | String | The message to be played to the caller using TTS. The size of the string is limited to 4 KB (or 4,096 bytes). An empty string will cause the command to be skipped. loop | Integer | Number of times the text is said. Specifying ‘0’ causes the Say action to loop until the Call is hung up. | [optional] language | String | Language and (by implication) the locale to use. This implies the accent and pronunciations to be usde for the TTS. The complete list of valid values for the language attribute is shown below. | [optional] conferenceId | String | ID of the Conference the speech should be rendered to. If this is not specified, the speech is by default rendered to the Caller associated with the call leg that corresponds to the current PerCL execution context. The call leg associated with this command must be in the specified Conference or the command will return an error. | [optional] enforcePCI | Boolean | Parameter enforcePCI will not log the ‘text’ as required by PCI compliance. . Percl::GetDigits . The GetDigits command collects DTMF inputs from the caller. It is only supported only when there is a single party on the Call. . GetDigits is a Terminal Command — any actions following it are never executed. When the Caller is done entering the digits, FreeClimb submits that data to the provided actionUrl using an HTTP POST request. Your server will be required to respond to the FreeClimb Webhook with PerCL to continue handling the call. . Example . # load the gems require &#39;sinatra&#39; require &#39;freeclimb&#39; require &#39;json&#39; post &#39;/voice&#39; do digits = Percl::GetDigits.new(&#39;MOCK_ACTION_URL&#39;) script = Percl::Script.new script.add(digits) script.to_json end . Parameters . Name | Type | Description | Notes ————- | ————- | ————- | ————- actionUrl | String | When the Caller has finished entering digits, FreeClimb will make an HTTP POST request to this URL. A PerCL response is expected to continue handling the Call. Make sure to keep “http://“ in the URL. initialTimeoutMs | Integer | Maximum time in milliseconds that FreeClimb will wait for the Caller to press the first digit before making a determination that a timeout has occurred and moving on to make the request to the actionUrl to submit the results of the GetDigits command. This timeout interval begins when all nested commands have been fully executed. | [optional] digitTimeoutMs | Integer | Maximum time in milliseconds that FreeClimb will wait for the Caller to press any digit after the last digit entered, before making a determination that a timeout has occurred and moving on to make the request to the actionUrl to submit the results of the GetDigits command. This timeout interval begins and resets after each digit entered. | [optional] finishOnKey | String | Digit that causes the input sequence to be deemed complete. This attribute defers to the timeout attribute – so, if a timeout occurs, then the command terminates regardless of the value of finishOnKey. | [optional] minDigits | Integer | Minimum number of digits expected in the input. If specified, FreeClimb will return the collected digits only if the Caller has entered at least that many digits. | [optional] maxDigits | Integer | Maximum number of digits expected in the input. If the terminating digit is not entered and the caller has entered the maximum number of digits allowed, the GetDigits command terminates regardless of the value of finishOnKey. | [optional] prompts | String | JSON array of PerCL commands to nest within the GetDigits command. The Say, Play, and Pause commands can be used. The nested actions are executed while FreeClimb is waiting for input from the Caller. | [optional] enforcePCI | Boolean | Parameter enforcePCI obscures the result as required by PCI compliance. . Percl::GetSpeech . The GetSpeech command enables the Caller to respond to the application using a supported language. Unlike DTMF entry, which implicitly restricts the user to using the available buttons on the phone key pad, speech input allows for flexible audio inputs based on grammar. FreeClimb supports grammars written using GRXML compatible with the Microsoft Speech Platform. . GetSpeech is only supported on a single call leg. It is not supported when there are two or more call legs connected (as in within a Conference). . Example . # load the gems require &#39;sinatra&#39; require &#39;freeclimb&#39; require &#39;json&#39; post &#39;/voice&#39; do speech = Percl::GetSpeech.new(&#39;MOCK_ACTION_URL&#39;, &#39;MOCK_GRAMMAR_FILE&#39;) script = Percl::Script.new script.add(speech) script.to_json end . Parameters . Name | Type | Description | Notes ————- | ————- | ————- | ————- actionUrl | String | When the caller has finished speaking or the command has timed out, FreeClimb will make a POST request to this URL. A PerCL response is expected to continue handling the call. grammarFile | String | The grammar file to use for speech recognition. If grammarType is set to URL, this attribute is specified as a download URL. grammarType | String | The grammar file type to use for speech recognition. A value of ‘URL’ indicates the grammarFile attribute specifies a URL that points to the grammar file. A value of ‘BUILTIN’ indicates the grammarFile attribute specifies the name of one of the platform built-in grammar files. | [optional] grammarRule | String | The grammar rule within the specified grammar file to use for speech recognition. This attribute is optional if grammarType is URL and ignored if grammarType is BUILTIN. | [optional if grammarType is URL] playBeep | Boolean | Indicates whether a beep should be played just before speech recognition is initiated so that the speaker can start to speak. | [optional] prompts | Percl Commands Array | The JSON array of PerCL commands to nest within the GetSpeech command. The Say, Play, and Pause commands can be used. The nested actions are executed while FreeClimb is waiting for input from the caller. This allows for playing menu options to the caller and to prompt for the expected input. These commands stop executing when the caller begins to input speech. | [optional] noInputTimeoutMs | Integer | When recognition is started and there is no speech detected for noInputTimeoutMs milliseconds, the recognizer will terminate the recognition operation. | [optional] recognitionTimeoutMs | Integer | When playback of prompts ends and there is no match for recognitionTimeoutMs milliseconds, the recognizer will terminate the recognition operation. | [optional] confidenceThreshold | Float | When a recognition resource recognizes a spoken phrase, it associates a confidence level with that match. Parameter confidenceThreshold specifies what confidence level is considered a successful match. Values are between 0.0 and 1.0. | [optional] sensitivityLevel | Float | The speech recognizer supports a variable level of sound sensitivity. The sensitivityLevel attribute allows for filtering out background noise, so it is not mistaken for speech. Values are between 0.0 and 1.0 | [optional] speechCompleteTimeoutMs | Integer | Parameter speechCompleteTimeoutMs specifies the length of silence required following user speech before the speech recognizer finalizes a result. This timeout applies when the recognizer currently has a complete match against an active grammar. Reasonable speech complete timeout values are typically in the range of 0.3 seconds to 1.0 seconds. | [optional] speechIncompleteTimeoutMs | Integer | Parameter speechIncompleteTimeoutMs specifies the length of silence following user speech after which a recognizer finalizes a result. This timeout applies when the speech prior to the silence is an incomplete match of all active grammars. Timeout speechIncompleteTimeoutMs is usually longer than speechCompleteTimeoutMs to allow users to pause mid-utterance. | [optional] enforcePCI | Boolean | Parameter enforcePCI will not log the ‘text’ as required by PCI compliance. | [optional] . Percl::Sms . The Sms command can be used to send an SMS message to a phone number during a phone call. . International SMS is disabled by default. . Example . # load the gems require &#39;sinatra&#39; require &#39;freeclimb&#39; require &#39;json&#39; post &#39;/voice&#39; do sms = Percl::Sms.new(&#39;MOCK_TO_NUMBER&#39;, &#39;MOCK_FROM_NUMBER&#39;, &#39;MOCK_TEXT&#39;) script = Percl::Script.new script.add(sms) script.to_json end . Parameters . Name Type Description Notes . to | String | E.164 representation of the phone number to which the message will be sent. Must be within FreeClimb’s service area and E.164 formatting (e.g., +18003608245). |   | . from | String | E.164 representation of the phone number to use as the sender. This must be an incoming phone number you have purchased from FreeClimb. |   | . text | String | Text contained in the message (maximum 160 characters). |   | . notificationUrl | String | When the message changes status, this URL will be invoked using HTTP POST with the messageStatus parameters. This is a notification only; any PerCL returned will be ignored. |   | .",
    "url": "http://localhost:4000/rubydocs/docs/percl.html",
    "relUrl": "/docs/percl.html"
  }
  ,"63": {
    "title": "FreeClimb",
    "content": "FreeClimb . FreeClimb - the Ruby gem for the FreeClimb API . FreeClimb is a cloud-based application programming interface (API) that puts the power of the Vail platform in your hands. FreeClimb simplifies the process of creating applications that can use a full range of telephony features without requiring specialized or on-site telephony equipment. Using the FreeClimb REST API to write applications is easy! You have the option to use the language of your choice or hit the API directly. Your application can execute a command by issuing a RESTful request to the FreeClimb API. The base URL to send HTTP requests to the FreeClimb REST API is: /apiserver. FreeClimb authenticates and processes your request. . This SDK is automatically generated by the OpenAPI Generator project: . API version: 1.0.0 | Package version: 1.0.0 | Build package: org.openapitools.codegen.languages.RubyClientCodegen | . Installation . Build a gem . To build the Ruby code into a gem: . gem build freeclimb.gemspec . Then either install the gem locally: . gem install ./freeclimb-1.0.0.gem . (for development, run gem install --dev ./freeclimb-1.0.0.gem to install the development dependencies) . or publish the gem to a gem hosting service, e.g. RubyGems. . Finally add this to the Gemfile: . gem &#39;freeclimb&#39;, &#39;~&gt; 1.0.0&#39; . Install from Git . If the Ruby gem is hosted at a git repository: https://github.com/GIT_USER_ID/GIT_REPO_ID, then add the following in the Gemfile: . gem &#39;freeclimb&#39;, :git =&gt; &#39;https://github.com/GIT_USER_ID/GIT_REPO_ID.git&#39; . Include the Ruby code directly . Include the Ruby code directly using -I as follows: . ruby -Ilib script.rb . Getting Started . Please follow the installation procedure and then run the following code: . # Load the gem require &#39;freeclimb&#39; # Setup authorization Freeclimb.configure do |config| # Configure HTTP basic authorization: fc config.username = &#39;ACCOUNT_ID&#39; config.password = &#39;AUTH_TOKEN&#39; end api_instance = Freeclimb::DefaultApi.new opts = { buy_incoming_number_request: Freeclimb::BuyIncomingNumberRequest.new # BuyIncomingNumberRequest | Incoming Number transaction details } begin #Buy a Phone Number result = api_instance.buy_a_phone_number(opts) p result rescue Freeclimb::ApiError =&gt; e puts &quot;Exception when calling DefaultApi-&gt;buy_a_phone_number: #{e}&quot; end . Documentation for API Endpoints . All URIs are relative to https://www.freeclimb.com/apiserver . Class Method HTTP request Description . Freeclimb::DefaultApi | buy_a_phone_number | POST /Accounts/{accountId}/IncomingPhoneNumbers | Buy a Phone Number | . Freeclimb::DefaultApi | create_a_conference | POST /Accounts/{accountId}/Conferences | Create a Conference | . Freeclimb::DefaultApi | create_a_queue | POST /Accounts/{accountId}/Queues | Create a Queue | . Freeclimb::DefaultApi | create_an_application | POST /Accounts/{accountId}/Applications | Create an application | . Freeclimb::DefaultApi | delete_a_recording | DELETE /Accounts/{accountId}/Recordings/{recordingId} | Delete a Recording | . Freeclimb::DefaultApi | delete_an_application | DELETE /Accounts/{accountId}/Applications/{applicationId} | Delete an application | . Freeclimb::DefaultApi | delete_an_incoming_number | DELETE /Accounts/{accountId}/IncomingPhoneNumbers/{phoneNumberId} | Delete an Incoming Number | . Freeclimb::DefaultApi | dequeue_a_member | POST /Accounts/{accountId}/Queues/{queueId}/Members/{callId} | Dequeue a Member | . Freeclimb::DefaultApi | dequeue_head_member | POST /Accounts/{accountId}/Queues/{queueId}/Members/Front | Dequeue Head Member | . Freeclimb::DefaultApi | download_a_recording_file | GET /Accounts/{accountId}/Recordings/{recordingId}/Download | Download a Recording File | . Freeclimb::DefaultApi | filter_logs | POST /Accounts/{accountId}/Logs | Filter Logs | . Freeclimb::DefaultApi | get_a_call | GET /Accounts/{accountId}/Calls/{callId} | Get a Call | . Freeclimb::DefaultApi | get_a_conference | GET /Accounts/{accountId}/Conferences/{conferenceId} | Get a Conference | . Freeclimb::DefaultApi | get_a_member | GET /Accounts/{accountId}/Queues/{queueId}/Members/{callId} | Get a Member | . Freeclimb::DefaultApi | get_a_participant | GET /Accounts/{accountId}/Conferences/{conferenceId}/Participants/{callId} | Get a Participant | . Freeclimb::DefaultApi | get_a_queue | GET /Accounts/{accountId}/Queues/{queueId} | Get a Queue | . Freeclimb::DefaultApi | get_a_recording | GET /Accounts/{accountId}/Recordings/{recordingId} | Get a Recording | . Freeclimb::DefaultApi | get_an_account | GET /Accounts/{accountId} | Get an Account | . Freeclimb::DefaultApi | get_an_application | GET /Accounts/{accountId}/Applications/{applicationId} | Get an Application | . Freeclimb::DefaultApi | get_an_incoming_number | GET /Accounts/{accountId}/IncomingPhoneNumbers/{phoneNumberId} | Get an Incoming Number | . Freeclimb::DefaultApi | get_an_sms_message | GET /Accounts/{accountId}/Messages/{messageId} | Get an SMS Message | . Freeclimb::DefaultApi | get_head_member | GET /Accounts/{accountId}/Queues/{queueId}/Members/Front | Get Head Member | . Freeclimb::DefaultApi | list_active_queues | GET /Accounts/{accountId}/Queues | List Active Queues | . Freeclimb::DefaultApi | list_all_account_logs | GET /Accounts/{accountId}/Logs | List All Account Logs | . Freeclimb::DefaultApi | list_an_application | GET /Accounts/{accountId}/Applications | List applications | . Freeclimb::DefaultApi | list_available_numbers | GET /AvailablePhoneNumbers | List available numbers | . Freeclimb::DefaultApi | list_call_logs | GET /Accounts/{accountId}/Calls/{callId}/Logs | List Call Logs | . Freeclimb::DefaultApi | list_call_recordings | GET /Accounts/{accountId}/Calls/{callId}/Recordings | List Call Recordings | . Freeclimb::DefaultApi | list_calls | GET /Accounts/{accountId}/Calls | List Calls | . Freeclimb::DefaultApi | list_conferences | GET /Accounts/{accountId}/Conferences | List Conferences | . Freeclimb::DefaultApi | list_incoming_numbers | GET /Accounts/{accountId}/IncomingPhoneNumbers | List Incoming Numbers | . Freeclimb::DefaultApi | list_members | GET /Accounts/{accountId}/Queues/{queueId}/Members | List Members | . Freeclimb::DefaultApi | list_participants | GET /Accounts/{accountId}/Conferences/{conferenceId}/Participants | List Participants | . Freeclimb::DefaultApi | list_recordings | GET /Accounts/{accountId}/Recordings | List Recordings | . Freeclimb::DefaultApi | list_sms_messages | GET /Accounts/{accountId}/Messages | List SMS Messages | . Freeclimb::DefaultApi | make_a_call | POST /Accounts/{accountId}/Calls | Make a Call | . Freeclimb::DefaultApi | remove_a_participant | DELETE /Accounts/{accountId}/Conferences/{conferenceId}/Participants/{callId} | Remove a Participant | . Freeclimb::DefaultApi | send_an_sms_message | POST /Accounts/{accountId}/Messages | Send an SMS Message | . Freeclimb::DefaultApi | stream_a_recording_file | GET /Accounts/{accountId}/Recordings/{recordingId}/Stream | Stream a Recording File | . Freeclimb::DefaultApi | update_a_conference | POST /Accounts/{accountId}/Conferences/{conferenceId} | Update a Conference | . Freeclimb::DefaultApi | update_a_live_call | POST /Accounts/{accountId}/Calls/{callId} | Update a Live Call | . Freeclimb::DefaultApi | update_a_participant | POST /Accounts/{accountId}/Conferences/{conferenceId}/Participants/{callId} | Update a Participant | . Freeclimb::DefaultApi | update_a_queue | POST /Accounts/{accountId}/Queues/{queueId} | Update a Queue | . Freeclimb::DefaultApi | update_an_account | POST /Accounts/{accountId} | Manage an account | . Freeclimb::DefaultApi | update_an_application | POST /Accounts/{accountId}/Applications/{applicationId} | Update an application | . Freeclimb::DefaultApi | update_an_incoming_number | POST /Accounts/{accountId}/IncomingPhoneNumbers/{phoneNumberId} | Update an Incoming Number | . Documentation for PerCL Responses . The Performance Command Language (PerCL) defines a set of instructions, written in JSON format, that express telephony actions to be performed in response to an event on the FreeClimb platform. FreeClimb communicates with the application server when events associated with the application occur, so the webserver can instruct FreeClimb how to handle such events using PerCL scripts. . When creating a Percl object, required parameters must be used in the constructer while optional parameters must be set direclty on the given Percl object. Example: . digits = &#39;630&#39; send_digits = Percl::SendDigits.new(digits) send_digits.pauseMs = &#39;500&#39; . Class Description . Percl::OutDial | The OutDial command is used to call a phone number | . Percl::Hangup | The Hangup command terminates a Call | . Percl::Pause | The Pause command halts execution of the current PerCL script for a specified number of millisecond | . Percl::Redirect | The Redirect command transfers control of a Call to the PerCL at a different URL | . Percl::SendDigits | The SendDigits command plays DTMF tones on a live Call. This is useful for navigating through IVR menus or dialing extensions | . Percl::Reject | The Reject command blocks an incoming Call. | . Percl::CreateConference | The CreateConference command does exactly what its name implies — it creates an unpopulated Conference (one without any Participants). | . Percl::TerminateConference | The TerminateConference command terminates an existing Conference. | . Percl::AddToConference | The AddToConference command adds a Participant to a Conference. | . Percl::RemoveFromConference | The RemoveFromConference command removes a Participant from a Conference but does not hang up. | . Percl::SetListen | The SetListen command enables or disables the listen privilege for a Conference Participant provided both calls are in the same conference. | . Percl::SetTalk | The SetTalk command enables or disables the talk privilege for a Participant in a Conference provided both calls are in the same conference. | . Percl::Enqueue | The Enqueue command adds the current Call to a call Queue. | . Percl::Dequeue | The Dequeue command transfers control of a Call that is in a Queue so that the waiting caller exits the Queue. | . Percl::RecordUtterance | The RecordUtterance command records the caller’s voice and returns the URL of a file containing the audio recording. | . Percl::StartRecordCall | The StartRecordCall command records the current call and returns the URL of a file containing the audio recording when recording completes. | . Percl::PlayEarlyMedia | The PlayEarlyMedia command plays A media file before attempting to connect a call | . Percl::Play | the Play command plays an audio file back to the caller. | . Percl::Say | The Say command provides Text-To-Speech (TTS) support. It converts text to speech and then renders it in a female voice back to the caller. | . Percl::GetDigits | The GetDigits command collects DTMF inputs from the caller. | . Percl::GetSpeech | The GetSpeech command enables the Caller to respond to the application using a supported language. | . Percl::Sms | The Sms command can be used to send an SMS message to a phone number during a phone call. | . Documentation for Models . Freeclimb::AccountRequest | Freeclimb::AccountResult | Freeclimb::AccountResultAllOf | Freeclimb::ApplicationList | Freeclimb::ApplicationListAllOf | Freeclimb::ApplicationRequest | Freeclimb::ApplicationResult | Freeclimb::ApplicationResultAllOf | Freeclimb::AvailableNumber | Freeclimb::AvailableNumberList | Freeclimb::AvailableNumberListAllOf | Freeclimb::BuyIncomingNumberRequest | Freeclimb::CallList | Freeclimb::CallListAllOf | Freeclimb::CallResult | Freeclimb::CallResultAllOf | Freeclimb::ConferenceList | Freeclimb::ConferenceListAllOf | Freeclimb::ConferenceParticipantList | Freeclimb::ConferenceParticipantListAllOf | Freeclimb::ConferenceParticipantResult | Freeclimb::ConferenceParticipantResultAllOf | Freeclimb::ConferenceResult | Freeclimb::ConferenceResultAllOf | Freeclimb::CreateConferenceRequest | Freeclimb::DequeueMemberRequest | Freeclimb::FilterLogsRequest | Freeclimb::IncomingNumberList | Freeclimb::IncomingNumberListAllOf | Freeclimb::IncomingNumberRequest | Freeclimb::IncomingNumberResult | Freeclimb::IncomingNumberResultAllOf | Freeclimb::LogList | Freeclimb::LogListAllOf | Freeclimb::LogResult | Freeclimb::MakeCallRequest | Freeclimb::MessageRequest | Freeclimb::MessageRequestAllOf | Freeclimb::MessageResult | Freeclimb::MessageResultAllOf | Freeclimb::MessagesList | Freeclimb::MessagesListAllOf | Freeclimb::MutableResourceModel | Freeclimb::PaginationModel | Freeclimb::QueueList | Freeclimb::QueueListAllOf | Freeclimb::QueueMember | Freeclimb::QueueMemberList | Freeclimb::QueueMemberListAllOf | Freeclimb::QueueRequest | Freeclimb::QueueResult | Freeclimb::QueueResultAllOf | Freeclimb::RecordingList | Freeclimb::RecordingListAllOf | Freeclimb::RecordingResult | Freeclimb::RecordingResultAllOf | Freeclimb::UpdateCallRequest | Freeclimb::UpdateConferenceParticipantRequest | Freeclimb::UpdateConferenceRequest | . Documentation for Authorization . fc . Type: HTTP basic authentication | .",
    "url": "http://localhost:4000/rubydocs/",
    "relUrl": "/"
  }
  
}